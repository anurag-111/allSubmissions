{"id":726043273,"lang":"cpp","lang_name":"C++","time":"1 year, 3 months","timestamp":1655653422,"status":10,"status_display":"Accepted","runtime":"75 ms","url":"/submissions/detail/726043273/","is_pending":"Not Pending","title":"Group Anagrams","memory":"20.7 MB","code":"class Solution {\npublic:\n    vector<vector<string>> groupAnagrams(vector<string>& strs) {\n        \n        unordered_map<string, vector<string>> umap;\n        vector<vector<string>> groupedAnagrams;\n        // // [    [\"bat\"],\n        //         [\"nat\",\"tan\"],\n        //         [\"ate\",\"eat\",\"tea\"]  \n        //     ]\n        for (string str : strs) {\n            \n            string key = str;\n            sort(key.begin(), key.end());\n            \n            // vector<string> values = umap[key];\n            // values.push_back(str);\n            // umap[key] = values;\n            umap[key].push_back(str);\n            \n        }\n        \n        for (auto itr : umap) {\n            groupedAnagrams.push_back(itr.second);\n        }\n        \n        return groupedAnagrams;\n        \n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"group-anagrams","has_notes":false,"flag_type":1}