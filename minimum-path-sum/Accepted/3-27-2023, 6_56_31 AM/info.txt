{"id":922730029,"lang":"cpp","lang_name":"C++","time":"5 months, 4 weeks","timestamp":1679880391,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/922730029/","is_pending":"Not Pending","title":"Minimum Path Sum","memory":"10.1 MB","code":"class Solution {\npublic:\n    int minPathSum(vector<vector<int>>& grid) {\n        \n        if(grid.size() == 0) {\n            return 0;\n        }\n    \n        \n        int m = grid.size();\n        int n = grid[0].size();\n        \n        vector<vector<int>> cost(m, vector<int>(n));\n        \n        cost[0][0] = grid[0][0];\n        \n        for(int i=1;i<m;i++) {\n            cost[i][0] = grid[i][0] + cost[i-1][0];\n        }\n        \n        for(int j=1;j<n;j++) {\n            cost[0][j] =  grid[0][j] + cost[0][j-1];\n        }\n            \n        \n        for(int i = 1; i < m; i++){\n            for(int j = 1; j < n; j++){\n                cost[i][j] = grid[i][j] + min(cost[i - 1][j], cost[i][j - 1]);\n            }\n        }\n        \n        // Sum of all numbers along the path :\n        // for(int i=0;i<m;i++){\n        //     for(int j=0;j<n;j++){\n        //         cout<<cost[i][j]<<\" \";\n        //     }\n        //     cout<<endl;\n        // }\n        \n        return cost[m - 1][n - 1];\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-path-sum","has_notes":false,"flag_type":1}