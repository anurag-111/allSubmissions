{"id":874807964,"lang":"cpp","lang_name":"C++","time":"8 months, 2 weeks","timestamp":1673277852,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/874807964/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"12.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> levelOrder(TreeNode* root) {\n        vector<vector<int>> result;\n        if (!root) {\n            return result;\n        }\n\n        queue<TreeNode* > q;\n        q.push(root);\n\n        while (!q.empty()) {\n            int n = q.size();\n            vector<int> curr_level;\n            for (int i = 0; i < n; i++) {\n                TreeNode* p = q.front();\n                q.pop();\n                curr_level.push_back(p->val);\n                if (p->left) {\n                    q.push(p->left);\n                }\n                if (p->right) {\n                    q.push(p->right);\n                }\n            }\n            result.push_back(curr_level);\n        }\n        return result;\n    }\n};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal","has_notes":false,"flag_type":1}