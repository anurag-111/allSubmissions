{"id":780591723,"lang":"cpp","lang_name":"C++","time":"1Â year","timestamp":1661195095,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/780591723/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"14.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {\n        if(l1 == NULL) \n            return l2;\n        if(l2 == NULL) \n            return l1;\n        if(l1->val > l2->val) \n            std::swap(l1,l2);\n        ListNode* result = l1;\n        while(l1 != NULL && l2 != NULL){\n            ListNode* temp = NULL;\n            while(l1 != NULL && l1->val <= l2->val){\n                temp = l1;\n                l1 = l1->next;\n            }\n            temp->next = l2;\n            std::swap(l1,l2);\n        }\n        return result;\n        }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-sorted-lists","has_notes":false,"flag_type":1}