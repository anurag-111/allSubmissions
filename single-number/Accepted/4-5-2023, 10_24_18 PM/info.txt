{"id":928577440,"lang":"cpp","lang_name":"C++","time":"5 months, 2 weeks","timestamp":1680713658,"status":10,"status_display":"Accepted","runtime":"28 ms","url":"/submissions/detail/928577440/","is_pending":"Not Pending","title":"Single Number","memory":"16.9 MB","code":"class Solution {\npublic:\n    int singleNumber(vector<int>& nums) {\n        sort(nums.begin(), nums.end()); \n        \n        for(int i = 0; i < nums.size() - 1; i += 2){\n            if(nums[i] != nums[i + 1]){\n                return nums[i];\n            }\n        }\n        \n        return nums[nums.size() - 1]; // The last element in our sorted array appears only once.\n    }\n};\n\n// [1,1,2,2,4,4,5] , n = 7\n// Solution with a linear runtime complexity and use only constant extra space.","compare_result":"1111111111111111111111111111111111111111111111111111111111111","title_slug":"single-number","has_notes":false,"flag_type":1}