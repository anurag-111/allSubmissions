{"id":808213528,"lang":"cpp","lang_name":"C++","time":"12Â months","timestamp":1664102805,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/808213528/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"8.3 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseList(ListNode* head) {\n        ListNode *nextNode, *prevNode = NULL;\n        while (head) {\n            nextNode = head->next;\n            head->next = prevNode;\n            prevNode = head;\n            head = nextNode;\n        }\n        return prevNode;\n    }\n};","compare_result":"1111111111111111111111111111","title_slug":"reverse-linked-list","has_notes":false,"flag_type":1}