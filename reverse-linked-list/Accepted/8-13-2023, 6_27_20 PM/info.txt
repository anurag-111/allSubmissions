{"id":1020203844,"lang":"cpp","lang_name":"C++","time":"1 month, 1 week","timestamp":1691931440,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1020203844/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"8.4 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n\nclass Solution {\npublic:\n    ListNode* reverseList(ListNode* head) {\n        ListNode* previous = NULL;\n        ListNode* current = head;\n        ListNode* nextNode = NULL;\n\n        while(current != nullptr) {\n            nextNode = current -> next;\n            current -> next = previous;\n            previous = current;\n            current = nextNode;\n        }\n\n        return previous;\n    }\n};\n\n// TIME COMPLEXITY : O(N)\n// SPACE COMPLEXITY : O(1)","compare_result":"1111111111111111111111111111","title_slug":"reverse-linked-list","has_notes":false,"flag_type":1}