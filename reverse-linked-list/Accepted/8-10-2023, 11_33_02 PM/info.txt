{"id":1017787385,"lang":"cpp","lang_name":"C++","time":"1 month, 1 week","timestamp":1691690582,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1017787385/","is_pending":"Not Pending","title":"Reverse Linked List","memory":"8.2 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseList(ListNode* head) {\n        if(head == NULL) {\n            return head;\n        }\n        \n        ListNode *prevNode = NULL;\n        ListNode *nextNode = NULL;\n        ListNode *currNode = head;\n\n        while(currNode) {\n            nextNode = currNode -> next;\n            currNode -> next = prevNode;\n            prevNode = currNode;\n            currNode = nextNode; \n        }\n\n        return prevNode;        \n    }\n};","compare_result":"1111111111111111111111111111","title_slug":"reverse-linked-list","has_notes":false,"flag_type":1}