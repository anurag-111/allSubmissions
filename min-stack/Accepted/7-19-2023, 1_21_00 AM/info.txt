{"id":997893090,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1689709860,"status":10,"status_display":"Accepted","runtime":"29 ms","url":"/submissions/detail/997893090/","is_pending":"Not Pending","title":"Min Stack","memory":"16.3 MB","code":"class MinStack {\npublic:\n    stack <int> s1;\n    stack <int> s2;\n    MinStack() {\n        \n    }\n    \n    void push(int val) {\n        s1.push(val);\n        \n        if(s2.empty() || val <= s2.top()){\n            s2.push(val);\n        }\n    }\n    \n    void pop() {\n        if(s1.top() == s2.top()){\n            s2.pop();\n        }\n        \n        s1.pop();\n    }\n    \n    int top() {\n        return s1.top();\n    }\n    \n    int getMin() {\n        return s2.top();\n    }\n};\n\n/**\n * Your MinStack object will be instantiated and called as such:\n * MinStack* obj = new MinStack();\n * obj->push(val);\n * obj->pop();\n * int param_3 = obj->top();\n * int param_4 = obj->getMin();\n */","compare_result":"1111111111111111111111111111111","title_slug":"min-stack","has_notes":false,"flag_type":1}