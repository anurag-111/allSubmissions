{"id":866142815,"lang":"cpp","lang_name":"C++","time":"8 months, 4 weeks","timestamp":1672117683,"status":10,"status_display":"Accepted","runtime":"22 ms","url":"/submissions/detail/866142815/","is_pending":"Not Pending","title":"Min Stack","memory":"16.2 MB","code":"class MinStack {\npublic:\n    vector <int> stk;\n    vector <int> min;\n    MinStack() {\n        \n    }\n    \n    void push(int val) {\n        stk.push_back(val);\n        \n        if(min.empty() || val <= min.back()){\n            min.push_back(val);\n        }\n    }\n    \n    void pop() {\n        if(stk.back() == min.back()){\n            min.pop_back();\n        }\n        \n        stk.pop_back();\n    }\n    \n    int top() {\n        return stk.back();\n    }\n    \n    int getMin() {\n        return min.back();\n    }\n};\n\n/**\n * Your MinStack object will be instantiated and called as such:\n * MinStack* obj = new MinStack();\n * obj->push(val);\n * obj->pop();\n * int param_3 = obj->top();\n * int param_4 = obj->getMin();\n */","compare_result":"1111111111111111111111111111111","title_slug":"min-stack","has_notes":false,"flag_type":1}