{"id":980903721,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1687877821,"status":10,"status_display":"Accepted","runtime":"343 ms","url":"/submissions/detail/980903721/","is_pending":"Not Pending","title":"Find K Pairs with Smallest Sums","memory":"137 MB","code":"class Solution {\npublic:\n    vector<vector<int>> kSmallestPairs(vector<int>& nums1, vector<int>& nums2, int k) \n    {\n        int n = nums1.size(), m = nums2.size();\n        vector<vector<int>> res;\n        vector<int> temp(n, 0);\n        set<vector<int>> pq;\n        pq.insert({nums1[0] + nums2[0], nums1[0], nums2[0], 0, 0}); \n        while(k-- && !pq.empty())\n        {\n            vector<int> itr = *pq.begin();\n            int a = itr[1], b = itr[2], c = itr[3], d = itr[4];\n            res.push_back({a, b});\n            if(d + 1 < m)\n            {\n                pq.insert({nums1[c] + nums2[d + 1], nums1[c], nums2[d + 1], c, d + 1});\n            }\n            if(c + 1 < n)\n            {\n                pq.insert({nums1[c + 1] + nums2[temp[c + 1]], nums1[c + 1], nums2[temp[c + 1]], c + 1, temp[c + 1]});\n                temp[c + 1]++;\n            }\n            pq.erase(pq.begin());\n        }\n        return res;\n    }\n};","compare_result":"11111111111111111111111111111111111","title_slug":"find-k-pairs-with-smallest-sums","has_notes":false,"flag_type":1}