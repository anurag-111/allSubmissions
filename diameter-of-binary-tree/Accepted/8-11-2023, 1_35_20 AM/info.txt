{"id":1017888251,"lang":"cpp","lang_name":"C++","time":"1 month, 1 week","timestamp":1691697920,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1017888251/","is_pending":"Not Pending","title":"Diameter of Binary Tree","memory":"20.4 MB","code":"class Solution {\nprivate:\n    int diameter;\n\n    int dfs(TreeNode *root) {\n        if(root == NULL) {\n            return 0;\n        }\n\n        int leftVal = dfs(root->left);\n        int rightVal = dfs(root->right);\n\n        diameter = max(diameter, (leftVal + rightVal));\n\n        return 1 + max(leftVal, rightVal);\n    }\n\npublic:\n    int diameterOfBinaryTree(TreeNode* root) {\n        if(root == NULL) {\n            return 0;\n        }\n\n        diameter = 0;\n        dfs(root);\n        return diameter;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"diameter-of-binary-tree","has_notes":false,"flag_type":1}