{"id":995958341,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1689519791,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/995958341/","is_pending":"Not Pending","title":"Next Greater Element II","memory":"N/A","code":"#include <vector>\n#include <stack>\nusing namespace std;\n\nclass Solution {\npublic:\n    \n    /**\n     * @brief Finds the next greater elements in a circular manner.\n     * \n     * Given an array, this function finds the next greater element for each element in the array,\n     * considering the array as circular (i.e., the last element is followed by the first element).\n     * \n     * @param arr The input array.\n     * @return A vector containing the next greater elements for each element in the input array.\n     */\n    vector<int> nextGreaterCircular(vector<int>& arr) {\n        vector<int> nextGreater(arr.size(), -1);\n        stack<int> st; // Stack to store indices of elements\n        \n        // Run the outer loop two times to consider the array as circular\n        for (int j = 0; j < 2; j++) {\n            // Traverse the array to find the next greater element for each element\n            for (int i = 0; i < arr.size(); i++) {\n                // While the stack is not empty and the current element is greater than the element at the top of the stack\n                while (!st.empty() && arr[st.top()] < arr[i]) {\n                    // Update the next greater element for the element at the top of the stack\n                    int stackTop = st.top();\n                    nextGreater[stackTop] = arr[i];\n                    st.pop();\n                }\n                // Push the index of the current element onto the stack\n                st.push(i);\n            }\n        }\n        \n        return nextGreater;\n    }\n};\n\n// Time Complexity: \n// O(N), where N is the number of elements in the input array.\n// The algorithm processes each element in the array exactly twice.\n\n// Space Complexity: \n// O(N), where N is the number of elements in the input array.\n// The space is used to store the output array and the stack, both of \n// which can have at most N elements.\n","compare_result":null,"title_slug":"next-greater-element-ii","has_notes":false,"flag_type":1}