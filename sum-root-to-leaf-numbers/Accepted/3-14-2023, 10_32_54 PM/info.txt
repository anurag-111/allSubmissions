{"id":915142428,"lang":"cpp","lang_name":"C++","time":"6 months, 1 week","timestamp":1678813374,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/915142428/","is_pending":"Not Pending","title":"Sum Root to Leaf Numbers","memory":"9.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int sum =0;\n    \n    void findSum(TreeNode *root, int number){\n        \n        if(!root) {\n            return;\n        }            \n        \n        number = number * 10 + root->val;\n        \n        if(!root->left && !root->right){\n            sum += number;\n        }\n            \n        findSum(root->left, number);\n        \n        findSum(root->right, number);\n    }\n    \n    int sumNumbers(TreeNode* root) {\n        \n        if(!root) {\n            return 0;\n        }            \n        \n        findSum(root,0);\n        \n        return sum;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-root-to-leaf-numbers","has_notes":false,"flag_type":1}