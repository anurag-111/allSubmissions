{"id":1006653468,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1690610322,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1006653468/","is_pending":"Not Pending","title":"Partition Labels","memory":"6.6 MB","code":"class Solution {\npublic:\n    vector<int> partitionLabels(string s) {\n        // Map to store the last occurrence index of each character in the string.\n        unordered_map<char, int> lastOccurrence;\n\n        // Populate the last occurrence index map.\n        for (int i = 0; i < s.size(); i++) {\n            lastOccurrence[s[i]] = i;\n        }\n\n        // Variables to keep track of the current partition's start and end.\n        int partitionStart = 0;\n        int partitionEnd = 0;\n\n        vector<int> result;\n        for (int i = 0; i < s.size(); i++) {\n            // Update the partitionEnd with the maximum index encountered so far.\n            partitionEnd = max(partitionEnd, lastOccurrence[s[i]]);\n\n            // If the current index reaches the end of the current partition,\n            // push the partition size into the result and update the partitionStart.\n            if (i == partitionEnd) {\n                result.push_back(partitionEnd - partitionStart + 1);\n                partitionStart = partitionEnd + 1;\n            }\n        }\n        return result;\n    }\n};\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-labels","has_notes":false,"flag_type":1}