{"id":982634663,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1688071757,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/982634663/","is_pending":"Not Pending","title":"Partition Labels","memory":"6.7 MB","code":"class Solution {\npublic:\n    vector<int> partitionLabels(string s) {\n        unordered_map<char, int> charMap;\n\n        // Create a map to store the last occurrence of each character\n        for (int i = 0; i < s.size(); i++) {\n            charMap[s[i]] = i;\n        }\n\n        int prev = -1;\n        int maxCharIndex = 0;\n        vector<int> result;\n\n        // Iterate through the string\n        for (int i = 0; i < s.size(); i++) {\n            maxCharIndex = max(maxCharIndex, charMap[s[i]]);\n\n            // If the current index is equal to the maximum character index encountered so far,\n            // it means we have found a partition\n            if (maxCharIndex == i) {\n                result.push_back(maxCharIndex - prev);\n                prev = maxCharIndex;\n            }\n        }\n\n        return result;\n    }\n};\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"partition-labels","has_notes":false,"flag_type":1}