{"id":994259920,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1689335274,"status":10,"status_display":"Accepted","runtime":"82 ms","url":"/submissions/detail/994259920/","is_pending":"Not Pending","title":"Capacity To Ship Packages Within D Days","memory":"31 MB","code":"class Solution {\n    private :\n            bool isPossible(vector<int> &weights, int leastCapacity, int days) {\n                long long currentCapacity = 0;\n                int reqDays = 1;\n\n                for(int i = 0; i < weights.size(); i++) {\n                    currentCapacity += weights[i];\n                    \n                    if(currentCapacity > leastCapacity) {\n                        reqDays++;\n                        currentCapacity = weights[i];\n                    }\n                }\n\n                return reqDays <= days;\n            }\n\n    public :\n        int shipWithinDays(vector<int>& weights, int days) {\n            int maxWeight = INT_MIN;\n            long long sumOfWeights = 0;\n\n            for(int i = 0; i < weights.size(); i++) {\n                maxWeight = max(maxWeight, weights[i]);\n                sumOfWeights += weights[i];\n            } \n\n            int low = maxWeight;\n            long long high = sumOfWeights;\n\n            while(low <= high) {\n                int mid = low + (high - low) / 2;\n\n                if(isPossible(weights, mid, days)) {\n                    high = mid - 1;\n                } else {\n                    low = mid + 1;\n                }\n            }\n\n            return low;\n        }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"capacity-to-ship-packages-within-d-days","has_notes":false,"flag_type":1}