{"id":986831868,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1688550702,"status":10,"status_display":"Accepted","runtime":"26 ms","url":"/submissions/detail/986831868/","is_pending":"Not Pending","title":"Product of Array Except Self","memory":"23.9 MB","code":"#include <vector>\n\nclass Solution {\npublic:\n    vector<int> productExceptSelf(vector<int>& nums) {\n        int size = nums.size();\n\n        vector<int> result(size, 1);        // Stores the final result\n\n        int leftProduct = 1;    // Product of elements to the left of the current element\n\n        // Calculate products of elements before the current index\n        for (int i = 0; i < size; i++) {\n            result[i] *= leftProduct;\n            leftProduct *= nums[i];\n        }\n\n        int rightProduct = 1;   // Product of elements to the right of the current element\n\n        // Calculate products of elements after the current index and multiply with the existing result\n        for (int i = size - 1; i >= 0; i--) {\n            result[i] *= rightProduct;\n            rightProduct *= nums[i];\n        }\n\n        return result;\n    }\n};\n","compare_result":"1111111111111111111111","title_slug":"product-of-array-except-self","has_notes":false,"flag_type":1}