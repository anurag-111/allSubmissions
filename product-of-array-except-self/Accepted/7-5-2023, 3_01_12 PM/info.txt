{"id":986818993,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1688549472,"status":10,"status_display":"Accepted","runtime":"23 ms","url":"/submissions/detail/986818993/","is_pending":"Not Pending","title":"Product of Array Except Self","memory":"25 MB","code":"#include <vector>\n\nclass Solution {\npublic:\n    vector<int> productExceptSelf(vector<int>& nums) {\n        int size = nums.size();\n\n        // Initialize vectors to store the products\n        vector<int> preProduct(size, 1);    // Stores products of elements before the current index\n        vector<int> postProduct(size, 1);   // Stores products of elements after the current index\n        vector<int> result(size, 0);        // Stores the final result\n\n        // Calculate products of elements before the current index\n        for (int i = 1; i < size; i++) {\n            preProduct[i] = preProduct[i - 1] * nums[i - 1];\n        }\n\n        // Calculate products of elements after the current index\n        for (int i = size - 2; i >= 0; i--) {\n            postProduct[i] = postProduct[i + 1] * nums[i + 1];\n        }\n\n        // Calculate the final result by multiplying the preProduct and postProduct\n        for (int i = 0; i < size; i++) {\n            result[i] = preProduct[i] * postProduct[i];\n        }\n\n        return result;\n    }\n};\n","compare_result":"1111111111111111111111","title_slug":"product-of-array-except-self","has_notes":false,"flag_type":1}