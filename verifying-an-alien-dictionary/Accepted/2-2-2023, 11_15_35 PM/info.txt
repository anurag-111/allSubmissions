{"id":890213300,"lang":"cpp","lang_name":"C++","time":"7 months, 2 weeks","timestamp":1675359935,"status":10,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/890213300/","is_pending":"Not Pending","title":"Verifying an Alien Dictionary","memory":"12.5 MB","code":"unordered_map<char, int> m;\n\nbool cmp(string a, string b){\n    int n = min(a.length(), b.length());\n    for(int i = 0; i < n; i++) {\n        if (m[a[i]] < m[b[i]]) {\n            return true;\n        }\n        else if (m[a[i]] > m[b[i]]) {\n            return false;\n        }\n    }\n    if(a.length() <= b.length()) {\n        return true;\n    }\n    return false;\n}\n\nclass Solution {\nprivate: \n    \npublic:\n    bool isAlienSorted(vector<string>& words, string order) {\n        for(int i = 0; i < order.length(); i++){\n            m[order[i]] = i;\n        }\n        vector<string> temp = words;\n        sort(temp.begin(), temp.end(), cmp);\n        return temp == words;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"verifying-an-alien-dictionary","has_notes":false,"flag_type":1}