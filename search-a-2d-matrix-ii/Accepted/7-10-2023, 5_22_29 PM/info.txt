{"id":990930574,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1688989949,"status":10,"status_display":"Accepted","runtime":"165 ms","url":"/submissions/detail/990930574/","is_pending":"Not Pending","title":"Search a 2D Matrix II","memory":"14.9 MB","code":"class Solution {\npublic:\n    /**\n     * Search for the target value in a matrix.\n     *\n     * @param matrix The input matrix.\n     * @param target The value to search for.\n     * @return True if the target value is found, False otherwise.\n     */\n    bool searchMatrix(vector<vector<int>>& matrix, int target) {\n        int rows = matrix.size();                          // Number of rows in the matrix\n        int cols = matrix[0].size();                       // Number of columns in the matrix\n\n        int row = 0;                                       // Start at the top-right corner\n        int col = cols - 1;\n\n        while (row < rows && col >= 0) {\n            if (matrix[row][col] == target) {\n                // Target found\n                return true;\n            } else if (matrix[row][col] > target) {\n                // Target is smaller, move left in the same row\n                col--;\n            } else {\n                // Target is larger, move down to the next row\n                row++;\n            }\n        }\n\n        // Target not found\n        return false;\n    }\n};\n\n\n/*\n    Time Complexity: O(N + M)\n\n    The search starts from the top-right corner and moves left or down depending on the target value. \n    In the worst case, it either reaches the bottom-left corner or goes out of bounds. \n    Hence, the time complexity is O(N + M), where N is the number of rows and M is the \n    number of columns in the matrix.\n    \n    Space Complexity: O(1)\n\n    The algorithm uses a constant amount of extra space for the variables rows, cols, row, and col.\n    Therefore, the space complexity is O(1), indicating constant space usage regardless of the \n    input size.\n    \n*/","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-a-2d-matrix-ii","has_notes":false,"flag_type":1}