{"id":957133068,"lang":"cpp","lang_name":"C++","time":"3 months, 4 weeks","timestamp":1685026025,"status":10,"status_display":"Accepted","runtime":"42 ms","url":"/submissions/detail/957133068/","is_pending":"Not Pending","title":"Minimum Moves to Equal Array Elements","memory":"28.2 MB","code":"class Solution {\npublic:\n    int minMoves(vector<int>& nums) {\n        int sum = 0;\n        int minVal = INT_MAX;\n        for(int i = 0; i < nums.size(); i++) {\n            sum += nums[i];\n            minVal = min(minVal, nums[i]);\n        }\n        return sum - (minVal * nums.size());\n    }\n};\n\n    // Explanation of sum - (minVal * nums.size());\n    \n    // In each move, we increment all but one element by 1.\n    // By incrementing all elements except the minimum one, we effectively reduce the difference between the elements.\n    // The minimum number of moves needed to make all elements equal is equal to the sum of differences between each \n    // element and the minimum element.\n    \n    // (minNum * nums.size()) represents the sum of the minimum element repeated nums.size() times \n    // (as we need to subtract this amount to equalize the elements).\n    \n    // Thus, subtracting (minNum * nums.size()) from totalSum gives us the minimum number of moves required.\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-moves-to-equal-array-elements","has_notes":false,"flag_type":1}