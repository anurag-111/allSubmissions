{"id":913729072,"lang":"cpp","lang_name":"C++","time":"6 months, 1 week","timestamp":1678613230,"status":10,"status_display":"Accepted","runtime":"392 ms","url":"/submissions/detail/913729072/","is_pending":"Not Pending","title":"Maximum Star Sum of a Graph","memory":"121.4 MB","code":"class Solution {\npublic:\n    int maxStarSum(vector<int>& vals, vector<vector<int>>& edges, int k) {\n        if(edges.size() == 0) {\n            int ans = -INT_MAX;\n            for(int i = 0; i < vals.size(); i++) {\n                ans = max(ans, vals[i]);\n            }\n            return ans;\n        }\n\n        vector<vector<int>> adj_list(vals.size());\n        int n = 0;\n\n        for(int i = 0; i < edges.size(); i++) {\n            int x = edges[i][0];\n            int y = edges[i][1];\n\n            adj_list[x].push_back(vals[y]);\n            adj_list[y].push_back(vals[x]);\n        }\n\n        long long mx = -1;\n        for(int i = 0; i < (int)adj_list.size(); i++) {\n            long long ans = 0;\n            sort(adj_list[i].rbegin(), adj_list[i].rend()); //sorting in descendig order\n\n            for(int j = 0; j < min(k, (int)adj_list[i].size()); j++) {\n                if(adj_list[i][j] > 0) {\n                    ans += adj_list[i][j];\n                }\n            }\n            ans += vals[i];\n            mx = max(mx, ans);\n        }\n        return mx;        \n    }\n};","compare_result":"1111111111111111111111111","title_slug":"maximum-star-sum-of-a-graph","has_notes":false,"flag_type":1}