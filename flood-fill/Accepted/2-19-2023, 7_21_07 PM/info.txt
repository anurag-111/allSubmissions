{"id":900980224,"lang":"cpp","lang_name":"C++","time":"7Â months","timestamp":1676814667,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/900980224/","is_pending":"Not Pending","title":"Flood Fill","memory":"13.9 MB","code":"class Solution {\nprivate:\n    void DFS(vector<vector<int>>& image, int row, int col, int new_color, int old_color) {\n        if(row < 0 || row >= image.size() || col < 0 || col >= image[0].size() || image[row][col] != old_color) {\n            return;\n        }\n\n        image[row][col] = new_color;\n\n        DFS(image, row + 1, col, new_color, old_color);\n        DFS(image, row, col + 1, new_color, old_color);\n        DFS(image, row - 1, col, new_color, old_color);\n        DFS(image, row, col - 1, new_color, old_color);\n    }\n\n\npublic:\n    vector<vector<int>> floodFill(vector<vector<int>>& image, int sr, int sc, int color) {\n        if(color == image[sr][sc]) {\n            return image;\n        }\n\n        DFS(image, sr, sc, color, image[sr][sc]);\n        return image;\n    }\n};\n\n// Time Complexity : O(row * col)\n// Space Complexity : O(1)","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flood-fill","has_notes":false,"flag_type":1}