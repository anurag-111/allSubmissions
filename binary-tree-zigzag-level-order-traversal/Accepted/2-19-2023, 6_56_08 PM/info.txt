{"id":900969511,"lang":"cpp","lang_name":"C++","time":"7Â months","timestamp":1676813168,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/900969511/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"12.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {\n        vector<vector<int>> result;\n        if(!root) {\n            return result;\n        }\n\n        queue<TreeNode *> q;\n        q.push(root);\n        bool flag = false;\n        while(!q.empty()) {\n            int node_count = q.size();\n            int n = node_count;\n            vector<int> level;\n\n            while(n--) {\n                TreeNode *curr = q.front();\n\n                if(curr->left) {\n                    q.push(curr->left);\n                }\n                if(curr->right) {\n                    q.push(curr->right);\n                }\n\n                q.pop();\n                level.push_back(curr->val);\n            }\n\n            if(flag) {\n                reverse(level.begin(), level.end());\n            }\n            result.push_back(level);\n            flag = !flag;\n        } \n        return result;\n    }\n};\n\n// Time Complexity : O(n)\n// Space Complexity : O(n)\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","compare_result":"111111111111111111111111111111111","title_slug":"binary-tree-zigzag-level-order-traversal","has_notes":false,"flag_type":1}