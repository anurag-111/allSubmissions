{"id":911308142,"lang":"cpp","lang_name":"C++","time":"6 months, 2 weeks","timestamp":1678258057,"status":10,"status_display":"Accepted","runtime":"76 ms","url":"/submissions/detail/911308142/","is_pending":"Not Pending","title":"Word Ladder","memory":"14.2 MB","code":"class Solution {\npublic:\n    int ladderLength(string beginWord, string endWord, vector<string>& wordList) {\n\n        queue<pair<string, int>> q;\n        q.push({beginWord, 1});\n\n        unordered_set<string> dict;\n        for (string word: wordList) {\n            dict.insert(word);\n        }\n\n        if(dict.find(endWord) == dict.end()) {\n            return 0;\n        }\n\n        \n        dict.erase(beginWord);\n\n        // unordered_map<string, vector<string>> adj;\n        // unordered_set<string> visited;\n        // visited.insert(beginWord);\n        // int len = 1;\n\n        while (!q.empty()) {\n            string word = q.front().first;\n            int sequence = q.front().second;\n            q.pop();\n\n            if(word == endWord) {\n                return sequence;\n            }\n\n            for (int i = 0; i < word.size(); i++) {\n                char current = word[i];\n                for (char ch = 'a'; ch <= 'z'; ch++) {\n                    if (ch != current) {\n                        word[i] = ch;\n                        if (dict.find(word) != dict.end()) {\n                            dict.erase(word);\n                            q.push({word, sequence + 1});\n                        }\n                        //cout<<word<<endl;\n                    }\n                }\n                word[i] = current;\n            }   \n        }         \n        return 0;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111","title_slug":"word-ladder","has_notes":false,"flag_type":1}