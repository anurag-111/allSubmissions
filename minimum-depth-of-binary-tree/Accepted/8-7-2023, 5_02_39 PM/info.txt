{"id":1014629133,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1691407959,"status":10,"status_display":"Accepted","runtime":"186 ms","url":"/submissions/detail/1014629133/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"148.6 MB","code":"// DFS APPROACH : \nclass Solution {\n    private:\n        int traversal(TreeNode* root) {\n            if(root == NULL) {\n                return 0;\n            }\n            \n            if(root->left == NULL && root->right == NULL) {\n                return 1;\n            }\n\n            int leftVal = INT_MAX;\n            int rightVal = INT_MAX;\n\n            if(root->left) {\n                leftVal = traversal(root->left);\n            }\n\n            if(root->right) {\n                rightVal = traversal(root->right);\n            }\n\n            return min(leftVal, rightVal) + 1;\n        }\n    \n    public:\n        int minDepth(TreeNode* root) {\n            return traversal(root);\n        }\n};\n\n// Time complexity : O(N)\n// Space complexity : O(H)","compare_result":"11111111111111111111111111111111111111111111111111111","title_slug":"minimum-depth-of-binary-tree","has_notes":false,"flag_type":1}