{"id":1014623224,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1691407396,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1014623224/","is_pending":"Not Pending","title":"Minimum Depth of Binary Tree","memory":"N/A","code":"// DFS APPROACH : \nclass Solution {\n    private:\n        int traversal(TreeNode* root, int depth) {\n            if(root->left == NULL && root->right == NULL) {\n                return depth;\n            }\n\n            int leftVal = INT_MAX;\n            int rightVal = INT_MAX;\n\n            if(root->left) {\n                leftVal = traversal(root->left, ++depth);\n            }\n\n            if(root->right) {\n                rightVal = traversal(root->right, ++depth);\n            }\n\n            return min(leftVal, rightVal);\n        }\n    \n    public:\n        int minDepth(TreeNode* root) {\n            if(root == NULL) {\n                return 0;\n            }\n\n            int depth = 1;\n            return traversal(root, depth);\n        }\n};\n\n// Time complexity : O(N)\n// Space complexity : O(H)","compare_result":"11111110111010001001111100100010100001110111111100101","title_slug":"minimum-depth-of-binary-tree","has_notes":false,"flag_type":1}