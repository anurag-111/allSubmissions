{"id":918429431,"lang":"cpp","lang_name":"C++","time":"6Â months","timestamp":1679277006,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/918429431/","is_pending":"Not Pending","title":"Can Place Flowers","memory":"20.3 MB","code":"class Solution {\npublic:\n    bool canPlaceFlowers(vector<int>& flowerbed, int n) {\n        int count  = 0;\n        int prev, next;\n\n        for(int i = 0; i < flowerbed.size(); i++) {\n            if(flowerbed[i] == 0) {\n                if(i == 0 || flowerbed[i - 1] == 0) {\n                    prev = 0; // empty\n                } else {\n                    prev = 1; // occupied \n                }\n\n                if(i == flowerbed.size() - 1 || flowerbed[i + 1] == 0) {\n                    next = 0; // empty\n                } else {\n                    next = 1; // occupied \n                }\n\n                if(prev == 0 && next == 0) {\n                    flowerbed[i] = 1;\n                    count++;\n                }\n            }\n        }     \n        return count >= n; //return if n new flowers can be planted in the flowerbed \n                           //without violating the no-adjacent-flowers rule.\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"can-place-flowers","has_notes":false,"flag_type":1}