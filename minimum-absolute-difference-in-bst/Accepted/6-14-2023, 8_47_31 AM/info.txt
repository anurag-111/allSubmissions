{"id":970770980,"lang":"cpp","lang_name":"C++","time":"3 months, 1 week","timestamp":1686712651,"status":10,"status_display":"Accepted","runtime":"19 ms","url":"/submissions/detail/970770980/","is_pending":"Not Pending","title":"Minimum Absolute Difference in BST","memory":"25.7 MB","code":"class Solution {\nprivate:\n    vector<int> nodes; // Stores the values of the tree nodes during inorder traversal\n\n    // Performs inorder traversal of the tree and populates the 'nodes' vector\n    void inorderTraversal(TreeNode* root) {\n        if (root == NULL) {\n            return;\n        }\n\n        inorderTraversal(root->left); // Traverse left subtree\n        nodes.push_back(root->val); // Store the value of the current node\n        inorderTraversal(root->right); // Traverse right subtree\n    }\n\npublic:\n    int getMinimumDifference(TreeNode* root) {\n        inorderTraversal(root); // Perform inorder traversal to populate 'nodes' vector\n\n        int minDifference = INT_MAX;\n        for (int i = 1; i < nodes.size(); i++) {\n            // Calculate the difference between adjacent nodes and update the minimum difference\n            minDifference = min(minDifference, nodes[i] - nodes[i - 1]);\n        }\n\n        return minDifference;\n    }\n};\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-absolute-difference-in-bst","has_notes":false,"flag_type":1}