{"id":911793173,"lang":"cpp","lang_name":"C++","time":"6 months, 2 weeks","timestamp":1678328439,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/911793173/","is_pending":"Not Pending","title":"Linked List Cycle II","memory":"7.7 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode *detectCycle(ListNode *head) {\n        ListNode *slow = head, *fast = head;\n         while (fast && fast->next) {\n             slow = slow->next;\n             fast = fast->next->next;\n             if (slow == fast) {\n                 break;\n             }\n        }\n        \n        if (!(fast && fast->next)) {\n            return NULL;\n        }\n        \n        while (head != slow) {\n            head = head->next;\n            slow = slow->next;\n        }\n        \n        return head;\n    }\n};","compare_result":"11111111111111111","title_slug":"linked-list-cycle-ii","has_notes":false,"flag_type":1}