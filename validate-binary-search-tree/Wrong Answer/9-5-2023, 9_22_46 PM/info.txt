{"id":1041348924,"lang":"cpp","lang_name":"C++","time":"2 weeks, 1 day","timestamp":1693929166,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1041348924/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\nprivate:\n    bool isValid(TreeNode* root, TreeNode* minNode, TreeNode* maxNode) {\n        if(root == NULL) {\n            return true;\n        }\n\n        if((minNode != NULL && root -> val <= minNode -> val) && (maxNode != NULL && root -> val <= maxNode -> val)) {\n            return false;\n        }\n\n        bool leftValid = isValid(root -> left, minNode, root);\n        bool rightValid = isValid(root -> right, root, maxNode);\n        \n        bool isValid = leftValid && rightValid;\n        return isValid;\n    }\n    \npublic:\n    bool isValidBST(TreeNode* root) {\n        return isValid(root, NULL, NULL);\n    }\n};","compare_result":"11110001000110011100111111111111111111110010010000101100100111100001010111011001010","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}