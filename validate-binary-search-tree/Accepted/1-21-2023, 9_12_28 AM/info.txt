{"id":882159959,"lang":"java","lang_name":"Java","time":"8Â months","timestamp":1674272548,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/882159959/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"41.8 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\nclass Solution {\n    public boolean isValidBST(TreeNode root) {\n        return validate (root, null, null);\n    }\n\n    public boolean validate (TreeNode root, Integer max, Integer min) {\n        if (root == null) {\n            return true;\n        } else if ((max != null && root.val >= max) || (min != null && root.val <= min)) {\n            return false;\n        } else {\n            return validate (root.left, root.val, min) && validate (root.right, max, root.val);\n        }\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}