{"id":1041350308,"lang":"cpp","lang_name":"C++","time":"2 weeks, 1 day","timestamp":1693929257,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/1041350308/","is_pending":"Not Pending","title":"Validate Binary Search Tree","memory":"21.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\nprivate:\n    bool isValid(TreeNode* root, TreeNode* minNode, TreeNode* maxNode) {\n        if (root == nullptr) {\n            return true;\n        }\n\n        if ((minNode != nullptr && root->val <= minNode->val) || (maxNode != nullptr && root->val >= maxNode->val)) {\n            return false;\n        }\n\n        bool leftValid = isValid(root->left, minNode, root);\n        bool rightValid = isValid(root->right, root, maxNode);\n        \n        return leftValid && rightValid;\n    }\n    \npublic:\n    bool isValidBST(TreeNode* root) {\n        return isValid(root, nullptr, nullptr);\n    }\n};\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"validate-binary-search-tree","has_notes":false,"flag_type":1}