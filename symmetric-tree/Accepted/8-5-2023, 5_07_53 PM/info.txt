{"id":1012821037,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1691235473,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/1012821037/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"16.3 MB","code":"class Solution {\npublic:\n    bool isMirror(TreeNode* left, TreeNode* right) {\n    if (!left && !right) return true;\n    if (!left || !right) return false;\n    if(left->val == right->val) {\n        return isMirror(left->left, right->right) && isMirror(left->right, right->left);\n    }\n    return false;\n}\n\nbool isSymmetric(TreeNode* root) {\n    if (!root) return true;\n    return isMirror(root->left, root->right);\n}\n\n};\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree","has_notes":false,"flag_type":1}