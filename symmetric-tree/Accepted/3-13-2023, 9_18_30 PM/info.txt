{"id":914453979,"lang":"java","lang_name":"Java","time":"6 months, 1 week","timestamp":1678722510,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/914453979/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"40.5 MB","code":"/**\n * Definition for a binary tree node.\n * public class TreeNode {\n *     int val;\n *     TreeNode left;\n *     TreeNode right;\n *     TreeNode() {}\n *     TreeNode(int val) { this.val = val; }\n *     TreeNode(int val, TreeNode left, TreeNode right) {\n *         this.val = val;\n *         this.left = left;\n *         this.right = right;\n *     }\n * }\n */\n \nclass Solution {\n    public boolean isSymmetric(TreeNode root) {\n        \n        if (root == null) {\n            return true;\n        }\n        \n        return isMirror(root.left, root.right);\n    }\n    \n    private boolean isMirror(TreeNode left, TreeNode right) {\n        \n        if (left == null || right == null) {\n            return left == right;\n        }\n        \n        if (left.val != right.val) {\n            return false;\n        }\n        \n        return isMirror(left.left, right.right) && isMirror(left.right, right.left);\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree","has_notes":false,"flag_type":1}