{"id":867474256,"lang":"cpp","lang_name":"C++","time":"8 months, 3 weeks","timestamp":1672314113,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/867474256/","is_pending":"Not Pending","title":"Trapping Rain Water","memory":"N/A","code":"// Bruteforce Approach\n\n// Since our task is to find the maximum height on left and right for each element of the array, simply traverse each element of the array A[]. For each element, find the maximum height on the left and maximum height on the right. At last, add min(right_max, left_max) – A[i] to answer.\n\n// Time Complexity: O(N^2). For each element, the left and right half are traversed.\n// Space Complexity: O(1)\n\nclass Solution {\npublic:\n    int trap(vector<int>& height) {\n        int result = 0;\n        for (int i = 1; i < (height.size() - 1); i++) {\n            \n            //finding left_max\n            int left_max = INT_MIN;\n            for (int j = i - 1; j >= 0; j--) {\n                left_max = max (height[j], left_max);\n            }\n\n            //finding right_max\n            int right_max = INT_MAX;\n            for (int k = i + 1; k < height.size(); k++) {\n                right_max = max (height[k], right_max);\n            }\n            \n            //finding the water trapped\n            int max_height = min (left_max, right_max);\n            result += max_height - height[i];\n        }\n        return result;\n    }\n};\n\n","compare_result":"1111010101100000000000001000000000100001001000010100001000000001000000000001000000000000000000101000000000000000000001000000101000000000100000000000000000101000000000000000000000000000000001001000000000000000000000000000001000000001000000000000000000000000000000000000000000000000000000010000000001010000000000000000000000","title_slug":"trapping-rain-water","has_notes":false,"flag_type":1}