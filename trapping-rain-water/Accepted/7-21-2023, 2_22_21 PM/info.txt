{"id":1000034428,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1689929541,"status":10,"status_display":"Accepted","runtime":"20 ms","url":"/submissions/detail/1000034428/","is_pending":"Not Pending","title":"Trapping Rain Water","memory":"19.8 MB","code":"class Solution {\n    public :\n        int trap(vector<int> &height) {\n            // Appraoch :\n            int size = height.size();\n            int leftMax[size];\n            int rightMax[size];\n            int maxValue = 0;\n            int result = 0; // how much water s being trapped \n\n            // 1. traversal for the max left boundary -> O(N)\n            for(int i = 0; i < size; i++) {\n                maxValue = max(maxValue, height[i]);\n                leftMax[i] = maxValue;\n            }\n\n\n            maxValue= 0; // reset the variable for further usage\n            \n            // 2. traversal for the max right boundary -> O(N)\n            for(int i = size - 1; i >= 0; i--) {\n                maxValue = max(maxValue, height[i]);\n                rightMax[i] = maxValue;\n            }\n\n            // 3. Calculation of area trapped\n            for(int i = 0; i < size; i++) {\n                result += min(leftMax[i], rightMax[i]) - height[i];\n            }\n\n            return result;\n        }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"trapping-rain-water","has_notes":false,"flag_type":1}