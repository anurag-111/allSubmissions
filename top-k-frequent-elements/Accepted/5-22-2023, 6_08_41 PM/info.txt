{"id":955099790,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1684759121,"status":10,"status_display":"Accepted","runtime":"16 ms","url":"/submissions/detail/955099790/","is_pending":"Not Pending","title":"Top K Frequent Elements","memory":"13.6 MB","code":"class Solution {\npublic:\n    vector<int> topKFrequent(vector<int>& nums, int k) {\n        // Count the frequency of each number using an unordered map\n        unordered_map<int, int> freq;\n        for (auto num : nums) {\n            freq[num]++;\n        }\n        \n        // Create a min heap (priority queue) to store the top k frequent elements\n        priority_queue<pair<int, int>, vector<pair<int, int>>, greater<pair<int, int>>> pq;\n        for (auto it = freq.begin(); it != freq.end(); it++) {\n            pq.push({it->second, it->first});\n            \n            // If the size of the priority queue exceeds k, remove the smallest element\n            if (pq.size() > k) {\n                pq.pop();\n            }\n        }\n        \n        // Extract the top k frequent elements from the priority queue\n        vector<int> result;\n        while (!pq.empty()) {\n            result.push_back(pq.top().second);\n            pq.pop();\n        }\n        \n        // Return the top k frequent elements in reverse order\n        reverse(result.begin(), result.end());\n        return result;   \n    }\n};\n","compare_result":"111111111111111111111","title_slug":"top-k-frequent-elements","has_notes":false,"flag_type":1}