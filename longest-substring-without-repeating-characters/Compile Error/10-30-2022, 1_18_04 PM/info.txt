{"id":833227837,"lang":"cpp","lang_name":"C++","time":"10 months, 3 weeks","timestamp":1667116084,"status":20,"status_display":"Compile Error","runtime":"N/A","url":"/submissions/detail/833227837/","is_pending":"Not Pending","title":"Longest Substring Without Repeating Characters","memory":"N/A","code":"class Solution {\npublic:\n    int lengthOfLongestSubstring(string s) {\n        unordered_map <char,int> umap;\n        int start = 0;\n        int max_len = 1;\n                \n        if(s.size() == 0 || s == NULL){\n            return 0;\n        }\n        for(int end = 0; end < s.size(); end++) {\n            char current = s[end]; \n            //check if current character already exists in map\n            //update start as max(start, umap[current] + 1)\n            if(umap.find(current) != umap.end()){\n                start = max(start, umap[current] + 1); \n            }\n            max_len = max(max_len, end-start+1);\n            umap[current] = end;\n        }\n        return max_len;\n    }\n};","compare_result":null,"title_slug":"longest-substring-without-repeating-characters","has_notes":false,"flag_type":1}