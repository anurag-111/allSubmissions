{"id":986938811,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1688561390,"status":10,"status_display":"Accepted","runtime":"38 ms","url":"/submissions/detail/986938811/","is_pending":"Not Pending","title":"Valid Sudoku","memory":"20.8 MB","code":"class Solution {\npublic:\n    bool isValidSudoku(vector<vector<char>>& board) {\n        unordered_set<int> rowSet[9], colSet[9], boxSet[9];\n\n        // Iterate over each cell in the Sudoku board\n        for (int row = 0; row < 9; row++) {\n            for (int col = 0; col < 9; col++) {\n                char cell = board[row][col];\n\n                // Skip empty cells\n                if (cell == '.') {\n                    continue;\n                }\n\n                // Convert the character to a number\n                int num = cell - '0';\n\n                // Calculate the box index\n                int box = (row / 3) * 3 + (col / 3);\n\n                // Check for redundancy in rows, columns, and boxes\n                if (rowSet[row].count(num) || colSet[col].count(num) || boxSet[box].count(num)) {\n                    return false; // Invalid Sudoku\n                }\n\n                // Insert the number into the corresponding row, column, and box\n                rowSet[row].insert(num);\n                colSet[col].insert(num);\n                boxSet[box].insert(num);\n            }\n        }\n\n        return true; // Valid Sudoku\n    }\n};\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"valid-sudoku","has_notes":false,"flag_type":1}