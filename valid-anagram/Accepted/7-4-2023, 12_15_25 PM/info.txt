{"id":985889572,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1688453125,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/985889572/","is_pending":"Not Pending","title":"Valid Anagram","memory":"7.3 MB","code":"class Solution {\npublic:\n    // Function to check if two strings are anagrams\n    bool isAnagram(string s, string t) {\n        // If the lengths of the strings are different, they cannot be anagrams\n        if (s.size() != t.size()) {\n            return false;\n        }\n\n        vector<int> count(26, 0); // Array to store character counts\n\n        // Count the frequency of each character in the strings\n        for (int i = 0; i < s.size(); i++) {\n            count[s[i] - 'a']++; // Increment count for character in string s\n            count[t[i] - 'a']--; // Decrement count for character in string t\n        }\n\n        // Check if all counts are zero\n        for (int i = 0; i < 26; i++) {\n            if (count[i] != 0) {\n                return false; // If any count is non-zero, strings are not anagrams\n            }\n        }\n\n        return true; // All counts are zero, strings are anagrams\n    }\n};","compare_result":"1111111111111111111111111111111111111111","title_slug":"valid-anagram","has_notes":false,"flag_type":1}