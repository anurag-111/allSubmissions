{"id":963878690,"lang":"cpp","lang_name":"C++","time":"3 months, 2 weeks","timestamp":1685904863,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/963878690/","is_pending":"Not Pending","title":"Number of Provinces","memory":"N/A","code":"class Solution {\npublic:\n    int findCircleNum(vector<vector<int>>& isConnected) {\n        if (isConnected.empty()) {\n            return 0;\n        }\n\n        int n = isConnected.size();\n        vector<int> visited(n, -1);\n        int groups = 0;\n\n        for (int i = 0; i < visited.size(); i++) {\n            if(visited[i] == -1){\n                groups++;\n                dfs(i, isConnected, visited);\n            }\n        }\n\n        return groups;\n    }\n\nprivate:\n    void dfs(int i, vector<vector<int>>& isConnected, vector<int>& visited) {\n        visited[i] = 1;\n        for (int j = 0; j < visited.size(); j++) {\n            if (i != j && isConnected[i][j] && !visited[j]) {\n                dfs(j, isConnected, visited);\n            }\n        }\n    }\n};","compare_result":"01001010100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000000","title_slug":"number-of-provinces","has_notes":false,"flag_type":1}