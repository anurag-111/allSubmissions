{"id":963879047,"lang":"java","lang_name":"Java","time":"3 months, 2 weeks","timestamp":1685904905,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/963879047/","is_pending":"Not Pending","title":"Number of Provinces","memory":"44.4 MB","code":"class Solution {\n\n    private void dfs(int[][] isConnected, int[] visited, int i){\n         for (int j = 0; j < isConnected.length; j++) {\n            if (isConnected[i][j] == 1 && visited[j] == 0) {\n                //Found an unvisited city in the current province \n                visited[j] = 1;\n                dfs(isConnected, visited, j);\n            }\n        }\n    }\n\n    public int findCircleNum(int[][] isConnected) {\n        int[] visited = new int[isConnected.length];\n        int count = 0;\n        \n        for(int i = 0; i < isConnected.length; i++) {\n            if(visited[i] == 0) {\n                dfs(isConnected, visited, i);\n                count++;\n            }\n        }\n        return count;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"number-of-provinces","has_notes":false,"flag_type":1}