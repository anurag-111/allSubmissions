{"id":1035772923,"lang":"cpp","lang_name":"C++","time":"3 weeks, 1 day","timestamp":1693381799,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/1035772923/","is_pending":"Not Pending","title":"Construct Binary Tree from Preorder and Inorder Traversal","memory":"26.4 MB","code":"class Solution {\nprivate:\n\tTreeNode* buildSubTree(vector<int> &preorder, vector<int> &inorder, int &preRootIndex, int left, int right, unordered_map<int, int> &inMap) {\n\t\tif(left > right) {\n\t\t\treturn NULL;\n\t\t}\n\t\t\n\t\t// Find the index of the current root element of the preorder traversal in the inorder traversal\n\t\t// and then move to the next root index\n\t\tint inPivotIndex = inMap[preorder[preRootIndex++]];\n\t\t\n\t\t// Creation of new node\n\t\tTreeNode* node = new TreeNode(inorder[inPivotIndex]);\n\t\t\n\t\t// Recursively build the left sub-tree using the left elements present in the inorder traversal\n\t\tnode->left = buildSubTree(preorder, inorder, preRootIndex, left, inPivotIndex - 1, inMap);\n\t\t\n\t\t// Recursively build the right sub-tree using the right elements present in the inorder traversal\n\t\tnode->right = buildSubTree(preorder, inorder, preRootIndex, inPivotIndex + 1, right, inMap);\n\t\t\n\t\treturn node;\n\t}\n\t\npublic:\n    TreeNode* buildTree(vector<int>& preorder, vector<int>& inorder) {\n        int preRootIndex = 0;\n        unordered_map<int, int> inMap;\n        \n        // Mapping of inorder elements -> index\n        for(int i = 0; i < inorder.size(); i++) {\n            inMap[inorder[i]] = i;\n        }\n        \n        return buildSubTree(preorder, inorder, preRootIndex, 0, inorder.size() - 1, inMap);\n    }\n};\n\n// Time Complexity : O(N)\n// Space Comlpexity : O(N)\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"construct-binary-tree-from-preorder-and-inorder-traversal","has_notes":false,"flag_type":1}