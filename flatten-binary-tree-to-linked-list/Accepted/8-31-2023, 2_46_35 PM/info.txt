{"id":1036677245,"lang":"cpp","lang_name":"C++","time":"3Â weeks","timestamp":1693473395,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/1036677245/","is_pending":"Not Pending","title":"Flatten Binary Tree to Linked List","memory":"12.7 MB","code":"// val, left , right\nclass Solution {\npublic:\n    void flatten(TreeNode* root) {\n        TreeNode *curr = root;\n        while(curr != NULL) {\n            if(curr -> left) {\n                TreeNode *pred = curr -> left;\n                while(pred -> right) {\n                    pred = pred -> right;\n                }\n                pred -> right = curr -> right;\n                curr -> right = curr -> left;\n                curr -> left = NULL;\n            }\n            curr = curr -> right;\n        }\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flatten-binary-tree-to-linked-list","has_notes":false,"flag_type":1}