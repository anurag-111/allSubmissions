{"id":959340187,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1685334030,"status":10,"status_display":"Accepted","runtime":"54 ms","url":"/submissions/detail/959340187/","is_pending":"Not Pending","title":"Design Parking System","memory":"33.1 MB","code":"// Class for managing a parking system\nclass ParkingSystem {\npublic:\n    int capacity_big;    \n    int capacity_medium; \n    int capacity_small; \n\n    // Constructor for initializing the parking system with capacities\n    ParkingSystem(int big, int medium, int small) {\n        this->capacity_big = big;\n        this->capacity_medium = medium;\n        this->capacity_small = small;\n    }\n    \n    // Method for adding a car to the parking system\n    bool addCar(int carType) {\n        if ((carType == 1 && capacity_big == 0) || \n            (carType == 2 && capacity_medium == 0) || \n            (carType == 3 && capacity_small == 0)) {\n            return false;\n        }\n        \n        if (carType == 1) {\n            capacity_big--;\n        } else if (carType == 2) {\n            capacity_medium--;\n        } else {\n            capacity_small--;\n        }\n        \n        return true;\n    }\n};\n\n/**\n * Your ParkingSystem object will be instantiated and called as such:\n * ParkingSystem* obj = new ParkingSystem(big, medium, small);\n * bool param_1 = obj->addCar(carType);\n */\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"design-parking-system","has_notes":false,"flag_type":1}