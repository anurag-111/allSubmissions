{"id":1023963842,"lang":"cpp","lang_name":"C++","time":"1Â month","timestamp":1692278740,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1023963842/","is_pending":"Not Pending","title":"Root Equals Sum of Children","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\nprivate:\n    int sum(TreeNode* node) {\n        return node -> val;\n    }\npublic:\n    bool checkTree(TreeNode* root) {\n        int rootValue = root -> val;\n        \n        int leftValue = sum(root -> left);\n        int rightValue = sum(root -> right);\n        \n        int childrenValue = leftValue + rightValue;\n        \n        return rootValue = childrenValue ? true : false;\n    }\n};","compare_result":"100110001100111111000001010100111100100010110001111101000010100111010001101001110000011001111100001111110110000001100110011010111101000011110010010001101010000000001010100110101101010010001000101100110001010101000100001101101110011011100111010100001100110010111101011001101001000001001101100111011011101101001","title_slug":"root-equals-sum-of-children","has_notes":false,"flag_type":1}