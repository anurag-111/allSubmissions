{"id":990118670,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1688902722,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/990118670/","is_pending":"Not Pending","title":"Car Fleet","memory":"N/A","code":"class Solution {\npublic:\n    /**\n     * Calculate the number of car fleets that reach the target.\n     * \n     * @param target The target position.\n     * @param position The positions of cars.\n     * @param speed The speeds of cars.\n     * @return The number of car fleets.\n     */\n    int carFleet(int target, vector<int>& position, vector<int>& speed) {\n        if (position.empty() || speed.empty()) {\n            // Empty input arrays, no car fleet possible\n            return 0;\n        }\n        \n        map<int, double, greater<int>> carMap; // Map to store position and time-to-target ratios\n        \n        for (int i = 0; i < position.size(); i++) {\n            double timeToTarget = double(target - position[i]) / speed[i];\n            carMap[position[i]] = timeToTarget; // Store position and time-to-target ratio in the map\n        }\n        \n        int currentFleet = 0;  // Current maximum time-to-target ratio\n        int carFleet = 0;     // Number of car fleets\n        \n        for (auto car : carMap) {\n            if (car.second > currentFleet) {\n                currentFleet = car.second;\n                carFleet++;  // Increase car fleet count if the time-to-target ratio is greater than the current maximum\n            }\n        }\n        \n        return carFleet;\n    }\n};\n","compare_result":"111111111110110110111110101100000000000000000000","title_slug":"car-fleet","has_notes":false,"flag_type":1}