{"id":866913764,"lang":"cpp","lang_name":"C++","time":"8 months, 3 weeks","timestamp":1672228995,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/866913764/","is_pending":"Not Pending","title":"Car Fleet","memory":"N/A","code":"class Solution {\npublic:\n    int carFleet(int target, vector<int>& position, vector<int>& speed) {\n        \n        map<int, double, greater<int>> mymap; \n        \n        //descending order\n        for (int i = 0; i < position.size(); i++) {\n            mymap[position[i]] = (double) (target - position[i])/ speed[i];\n        }\n        \n        int fleet = 0;\n        int current_fleet_time = 0;\n        for(auto x : mymap) {\n            if(x.second > current_fleet_time) {      // current car does not belong to the previous fleet as \n                fleet++;                             // it reaches the target desitnation late. \n                current_fleet_time = x.second;       // Therefore, create a new fleet for the current car\n                }\n        }\n        return fleet;\n    }\n};","compare_result":"111111111110110110111110101100000000000000000000","title_slug":"car-fleet","has_notes":false,"flag_type":1}