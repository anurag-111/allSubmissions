{"id":952737426,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1684417290,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/952737426/","is_pending":"Not Pending","title":"Insert Interval","memory":"17 MB","code":"class Solution {\npublic:\n    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {\n        vector<vector<int>> result;\n        int i = 0;\n        int n = intervals.size();\n\n        //Case 1 : no overlap before the newInterval\n        while(i < n && intervals[i][1] < newInterval[0]) {\n            result.push_back(intervals[i]);\n            i++;\n        }\n\n        //Case 2 : overlapping occurs\n        vector<int> mergeInt = newInterval;\n        while(i < n && intervals[i][0] <= newInterval[1]) {\n            mergeInt[0] = min(intervals[i][0], mergeInt[0]);\n            mergeInt[1] = max(intervals[i][1], mergeInt[1]);\n            i++;\n        }\n\n        result.push_back(mergeInt);\n\n        //Case 3 : no overlap after the newInterval\n        while(i < n) {\n            result.push_back(intervals[i]);\n            i++;\n        }\n\n        return result;\n\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"insert-interval","has_notes":false,"flag_type":1}