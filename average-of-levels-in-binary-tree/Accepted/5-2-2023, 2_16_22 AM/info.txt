{"id":942853761,"lang":"cpp","lang_name":"C++","time":"4 months, 3 weeks","timestamp":1682973982,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/942853761/","is_pending":"Not Pending","title":"Average of Levels in Binary Tree","memory":"22.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<double> averageOfLevels(TreeNode* root) {\n        vector<double> ans;\n        \n        queue <TreeNode*> nodeQueue;   \n        nodeQueue.push(root);\n\n        while(!nodeQueue.empty()) {      \n            long double sum = 0;    \n            double avg = 0;\n            int levelSize = nodeQueue.size();\n            \n            for(int i = 0; i < levelSize; i++) {\n                TreeNode* currentNode = nodeQueue.front();\n                nodeQueue.pop();\n                sum += currentNode->val;\n\n                if(currentNode->left) {\n                    nodeQueue.push(currentNode->left);\n                } \n                if(currentNode->right) {\n                    nodeQueue.push(currentNode->right);\n                } \n            }   \n            \n            avg += double(sum / levelSize);\n            ans.push_back(avg);         \n        }\n\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"average-of-levels-in-binary-tree","has_notes":false,"flag_type":1}