{"id":1006740711,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1690619030,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1006740711/","is_pending":"Not Pending","title":"3Sum Closest","memory":"N/A","code":"class Solution {\npublic:\n    int threeSumClosest(vector<int>& nums, int target) {\n        // Initialize variables to track the minimum difference and the closest sum\n        int minDiff = 0;\n        int closestSum = 0;\n\n        // Sort the input array in ascending order\n        sort(nums.begin(), nums.end());\n\n        // Loop through the array, considering each element as the first element in a potential triplet\n        for (int i = 0; i < nums.size(); i++) {\n            int left = i + 1; // Index of the second element\n            int right = nums.size() - 1; // Index of the third element\n\n            // Continue the loop until left and right pointers meet\n            while (left < right) {\n                // Calculate the sum of the current triplet\n                int currSum = nums[i] + nums[left] + nums[right];\n                // Calculate the difference between the current sum and the target\n                int curDiff = target - currSum;\n\n                // If the difference is zero, then the sum is equal to the target, return it\n                if (curDiff == 0) {\n                    return target;\n                }\n\n                // Update the closest sum and minimum difference if necessary\n                if (curDiff < minDiff) {\n                    minDiff = curDiff;\n                    closestSum = currSum;\n                }\n\n                // Adjust the pointers based on the comparison with the target\n                if (currSum < target) {\n                    left++;\n                } else {\n                    right--;\n                }\n            }\n        }\n        return closestSum;\n    }\n};\n\n\n// Time complexity : O(n ^ 2)\n// Space complexity : O(1)","compare_result":"111110111010001111111000110001000000011000000100001100000100000100000001010000000100000001111000000","title_slug":"3sum-closest","has_notes":false,"flag_type":1}