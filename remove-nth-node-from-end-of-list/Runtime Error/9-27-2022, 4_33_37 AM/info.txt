{"id":809381563,"lang":"cpp","lang_name":"C++","time":"11 months, 4 weeks","timestamp":1664233417,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/809381563/","is_pending":"Not Pending","title":"Remove Nth Node From End of List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n/*Solution - I (One-Pointer, Two-Pass)\nWe just iterate in the first-pass to find the length of the linked list - len.\nIn the next pass, iterate len - n - 1 nodes from start and delete the next node (which would be nth node from end).\n*/\nclass Solution {\npublic:\n    ListNode* removeNthFromEnd(ListNode* head, int n) {\n        ListNode* iter = head;\n        ListNode* del;\n        int len = 0, i = 1;\n        while(iter){                       // finding the length of linked list\n            iter = iter -> next;\n            len++;\n        }\n        if(len == n)                       // if head itself is to be deleted\n            head = head -> next;\n        for(iter = head; i < len - n; i++) // iterate first len-n nodes\n            iter = iter -> next;\n        del = iter -> next;\n        iter -> next = iter -> next -> next;\n        delete(del);\n        return head;\n    }\n};","compare_result":"1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"remove-nth-node-from-end-of-list","has_notes":false,"flag_type":1}