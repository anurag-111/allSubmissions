{"id":988815423,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1688756597,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/988815423/","is_pending":"Not Pending","title":"Swap Nodes in Pairs","memory":"7.3 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* swapPairs(ListNode* head) {\n        // if head is NULL OR just having a single node, then no need to change anything \n        if(head == NULL || head -> next == NULL) {\n            return head;\n        }\n            \n        ListNode* temp; // temporary pointer to store head -> next\n        temp = head->next; // give temp what he want\n        \n        head->next = swapPairs(head->next->next); // changing links\n        temp->next = head; // put temp -> next to head\n        \n        return temp; // now after changing links, temp act as our head\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111","title_slug":"swap-nodes-in-pairs","has_notes":false,"flag_type":1}