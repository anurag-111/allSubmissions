{"id":808270594,"lang":"cpp","lang_name":"C++","time":"12Â months","timestamp":1664110240,"status":10,"status_display":"Accepted","runtime":"25 ms","url":"/submissions/detail/808270594/","is_pending":"Not Pending","title":"Linked List Cycle","memory":"7.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        if(head == NULL || head -> next == NULL)\n            return false;\n        ListNode *fast = head;\n        ListNode *slow = head;\n        while(fast -> next && fast -> next -> next){\n            fast = fast -> next -> next;\n            slow = slow -> next;\n            if(fast == slow)\n                return true;\n        }\n        return false;\n    }\n};","compare_result":"1111111111111111111111","title_slug":"linked-list-cycle","has_notes":false,"flag_type":1}