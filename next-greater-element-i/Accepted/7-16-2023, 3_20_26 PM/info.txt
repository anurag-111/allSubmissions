{"id":995769265,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1689501026,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/995769265/","is_pending":"Not Pending","title":"Next Greater Element I","memory":"8.8 MB","code":"\nclass Solution {\npublic:\n    /**\n     * @brief Finds the next greater element for each element in nums1 from the corresponding positions in nums2.\n     * \n     * @param nums1 The first input vector.\n     * @param nums2 The second input vector.\n     * @return A vector containing the next greater elements for each element in nums1.\n     */\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\n        stack<int> numStack; // Stack to keep track of elements in nums2\n        unordered_map<int, int> nextGreaterMap; // Store the next greater element for each element in nums2\n        vector<int> result(nums1.size(), -1); // Result vector to store the next greater elements for nums1 elements\n        \n        for (int num : nums2) {\n            // While the stack is not empty and the current num in nums2 is greater than the top element in the stack\n            while (!numStack.empty() && num > numStack.top()) {\n                // Update the next greater element for the top element in the stack\n                nextGreaterMap[numStack.top()] = num;\n                numStack.pop(); // Remove the processed element from the stack\n            }\n            numStack.push(num); // Push the current num in nums2 into the stack\n        }\n        \n        for (int i = 0; i < result.size(); i++) {\n            if (nextGreaterMap.find(nums1[i]) != nextGreaterMap.end()) {\n                result[i] = nextGreaterMap[nums1[i]];\n            } else {\n                result[i] = -1;\n            }\n        }\n        \n        return result;\n    }\n};\n\n","compare_result":"1111111111111111","title_slug":"next-greater-element-i","has_notes":false,"flag_type":1}