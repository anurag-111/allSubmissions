{"id":989853092,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1688875245,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/989853092/","is_pending":"Not Pending","title":"Next Greater Element I","memory":"9.3 MB","code":"class Solution {\npublic:\n    vector<int> nextGreaterElement(vector<int>& nums1, vector<int>& nums2) {\n        vector<int> result(nums1.size(), -1);\n        vector<int> nextGreater(10001, -1); // Stores the next greater element for each number in nums2\n        stack<int> numStack; // Stack to store numbers from nums2\n\n        // Finding the next greater element for each number in nums2\n        for (auto num : nums2) {\n            while (!numStack.empty() && numStack.top() < num) {\n                nextGreater[numStack.top()] = num; // Set the next greater element for the number at the top of the stack\n                numStack.pop(); // Pop the number from the stack\n            }\n            numStack.push(num); // Push the current number into the stack\n        }\n\n        // Finding the next greater element for each number in nums1\n        for (int i = 0; i < nums1.size(); i++) {\n            result[i] = nextGreater[nums1[i]]; // Assign the next greater element from the nextGreater array\n        }\n\n        return result;\n    }\n};\n","compare_result":"1111111111111111","title_slug":"next-greater-element-i","has_notes":false,"flag_type":1}