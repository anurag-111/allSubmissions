{"id":954438835,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1684663872,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/954438835/","is_pending":"Not Pending","title":"Summary Ranges","memory":"6.9 MB","code":"// [0,1,2,4,5,7]\n// [\"0->2\", \"4->5\", \"7\"]\n\n// Breakpoint occurs at 4, inserting 0 -> 2\n// Update the pointers at 4\n\n// Algo : Find the breakpoint, insert the already found sequence and then update \n// the pointers and repeat the process.\n\n// Testcase : [0, 2, 4]\n// Output : [\"0\", \"2\", \"4\"]\n\nclass Solution {\n    private :\n        string formatRange(int start, int end) {\n            if(start == end) {\n                return to_string(start);\n            } else {\n                return to_string(start) + \"->\" + to_string(end);\n            }\n        }\n    \n    public:\n        vector<string> summaryRanges(vector<int> &nums) {\n            vector<string> result;\n\n            if(!nums.size()) {\n                return result;\n            }\n            \n            int start = nums[0];\n            int end = nums[0];\n\n            for(int i = 1; i < nums.size(); i++) {\n                if(nums[i] == end + 1) {\n                    end = nums[i];\n                } else {\n                    // Insert start and end\n                    result.push_back(formatRange(start, end));\n                    start = end = nums[i];\n                }\n            }\n            \n            result.push_back(formatRange(start, end));\n            return result;\n            \n        }\n};\n\n\n\n\n\n\n","compare_result":"11111111111111111111111111111","title_slug":"summary-ranges","has_notes":false,"flag_type":1}