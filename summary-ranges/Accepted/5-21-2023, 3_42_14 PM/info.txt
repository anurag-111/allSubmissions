{"id":954439276,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1684663934,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/954439276/","is_pending":"Not Pending","title":"Summary Ranges","memory":"6.9 MB","code":"// [0,1,2,4,5,7]\n// [\"0->2\", \"4->5\", \"7\"]\n\n// Breakpoint occurs at 4, inserting 0 -> 2\n// Update the pointers at 4\n\n// Algo : Find the breakpoint, insert the already found sequence and then update \n// the pointers and repeat the process.\n\n// Testcase : [0, 2, 4]\n// Output : [\"0\", \"2\", \"4\"]\n\nclass Solution {\nprivate:\n    string formatRange(int start, int end) {\n        if (start == end) {\n            return to_string(start); // Return a single number as a string if the range has only one element\n        } else {\n            return to_string(start) + \"->\" + to_string(end); // Return the formatted range string\n        }\n    }\n\npublic:\n    vector<string> summaryRanges(vector<int>& nums) {\n        vector<string> result;\n        int n = nums.size();\n        if (n == 0) {\n            return result; // If the input vector is empty, return an empty result vector\n        }\n        \n        int start = nums[0]; // Initialize the start of the current range\n        int end = nums[0]; // Initialize the end of the current range\n        \n        for (int i = 1; i < n; i++) {\n            if (nums[i] == end + 1) {\n                end = nums[i]; // Extend the current range\n            } else {\n                result.push_back(formatRange(start, end)); // Add the formatted range to the result vector\n                start = end = nums[i]; // Start a new range with the current number\n            }\n        }\n        \n        result.push_back(formatRange(start, end)); // Add the last range to the result vector\n        \n        return result; // Return the result vector\n    }\n};\n","compare_result":"11111111111111111111111111111","title_slug":"summary-ranges","has_notes":false,"flag_type":1}