{"id":1037478870,"lang":"cpp","lang_name":"C++","time":"2 weeks, 6 days","timestamp":1693555629,"status":10,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/1037478870/","is_pending":"Not Pending","title":"Search in a Binary Search Tree","memory":"34.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* searchBST(TreeNode* root, int val) {\n        TreeNode* current = root;\n        \n        while(current) {\n            if(current -> val == val) {\n                return current;\n            }\n            \n            if(val > current -> val) {\n                current = current -> right;\n            } else {\n                current = current -> left;\n            }\n        }\n        \n        return NULL;\n    }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"search-in-a-binary-search-tree","has_notes":false,"flag_type":1}