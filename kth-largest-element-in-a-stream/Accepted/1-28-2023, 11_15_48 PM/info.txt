{"id":886967709,"lang":"cpp","lang_name":"C++","time":"7 months, 3 weeks","timestamp":1674927948,"status":10,"status_display":"Accepted","runtime":"32 ms","url":"/submissions/detail/886967709/","is_pending":"Not Pending","title":"Kth Largest Element in a Stream","memory":"19.9 MB","code":"class KthLargest {\npublic:\n    priority_queue<int, vector<int>, greater<int>> pq;\n    int k_value;\n\n    //log(NlogN)\n    KthLargest(int k, vector<int>& nums) {\n        k_value = k;\n        for (auto itr : nums) {\n            pq.push(itr);\n            if (pq.size() > k) {\n            pq.pop();\n        }\n       \n        }\n    }\n    \n    //log(N)\n    int add(int val) {\n        pq.push(val);\n        if (pq.size() > k_value) {\n            pq.pop();\n        }\n        return pq.top();\n    }\n};\n\n/**\n * Your KthLargest object will be instantiated and called as such:\n * KthLargest* obj = new KthLargest(k, nums);\n * int param_1 = obj->add(val);\n */","compare_result":"1111111111","title_slug":"kth-largest-element-in-a-stream","has_notes":false,"flag_type":1}