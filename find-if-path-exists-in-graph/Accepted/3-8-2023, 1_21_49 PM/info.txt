{"id":911337215,"lang":"cpp","lang_name":"C++","time":"6 months, 2 weeks","timestamp":1678261909,"status":10,"status_display":"Accepted","runtime":"677 ms","url":"/submissions/detail/911337215/","is_pending":"Not Pending","title":"Find if Path Exists in Graph","memory":"170.3 MB","code":"class Solution {\npublic:\n    \n    bool dfs(vector<vector<int>>& adj_list, vector<int>& visited, int current, int end) {\n        \n        // If the source an destination have a valid path\n        if(current == end) {\n            return true;\n        }\n            \n        // Already marked\n        if(visited[current]) {\n            return false;\n        }\n           \n        \n        // Markig it as visited\n        visited[current] = 1;\n        \n        // Applying DFS to search for the valid path\n        for(int i=0; i < adj_list[current].size(); i++){\n            if(dfs(adj_list, visited, adj_list[current][i], end)) {\n                return true;\n            }\n        }\n        \n        return false;\n    }\n    \n    bool validPath(int n, vector<vector<int>>& edges, int start, int end) {\n        \n        vector<vector<int>> adj_list(n);\n        \n        // Creating adjacency list for the undirected graph\n        for(int i = 0; i < edges.size(); i++) {\n            adj_list[edges[i][0]].push_back(edges[i][1]);\n            adj_list[edges[i][1]].push_back(edges[i][0]);\n        }\n\n       // Creating a visited array\n        vector<int> visited(n, 0);\n    \n        return dfs(adj_list, visited, start, end);\n    }\n};","compare_result":"11111111111111111111111111111","title_slug":"find-if-path-exists-in-graph","has_notes":false,"flag_type":1}