{"id":947061158,"lang":"cpp","lang_name":"C++","time":"4 months, 2 weeks","timestamp":1683611955,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/947061158/","is_pending":"Not Pending","title":"Spiral Matrix","memory":"6.8 MB","code":"// https://leetcode.com/problems/spiral-matrix\n\nclass Solution {\npublic:\n    vector<int> spiralOrder(vector<vector<int>>& matrix) {\n        \n        int m = matrix.size();\n        vector<int> result;\n       \n        if(m == 0) {\n            return result;\n        } \n\n        int n = matrix[0].size();\n        \n        int top = 0, left = 0, right = n-1, bottom = m-1;\n        \n        \n        while(top <= bottom && left <= right){\n            \n            for(int i = left; i <= right; i++){\n                result.push_back(matrix[top][i]);\n            }\n            top++;\n            \n            for(int i = top; i <= bottom; i++){\n                result.push_back(matrix[i][right]);\n            }\n            \n            right--;\n            \n            if(top > bottom || right < left) {\n                break;\n            } \n            \n            for(int i = right; i >= left; i--){\n                result.push_back(matrix[bottom][i]);\n            }\n            \n            bottom--;\n            \n            for(int i = bottom; i >= top; i--){\n                result.push_back(matrix[i][left]);\n            }\n            left++;\n        }\n        return result;\n    }\n};","compare_result":"11111111111111111111111","title_slug":"spiral-matrix","has_notes":false,"flag_type":1}