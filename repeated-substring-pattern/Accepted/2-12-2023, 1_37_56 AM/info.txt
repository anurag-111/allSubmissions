{"id":896125603,"lang":"java","lang_name":"Java","time":"7 months, 1 week","timestamp":1676146076,"status":10,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/896125603/","is_pending":"Not Pending","title":"Repeated Substring Pattern","memory":"42.8 MB","code":"class Solution {\n    public boolean repeatedSubstringPattern(String s) {\n        \n        // edge cases\n        if(s == null || s.length() == 0) {\n            return true;\n        }\n        \n        int size = s.length();\n\n        for(int len = 1; len <= size / 2; len++) {      // pattern must repeat at least twice, i.e. pattern length is at most size / 2\n            if(size % len == 0) {             \n                String pattern = s.substring(0, len);   // pattern string\n                int start = len;                        // start index of 2nd pattern\n                int end = start + len - 1;              // end index of 2nd pattern\n            \n                while(end < size) {\n                    String substr = s.substring(start, end + 1);\n                    if(!pattern.equals(substr)) {       // failed for this pattern, try next pattern\n                        break;\n                    } \t\t\n                    start += len;\n                    end += len;\n                }\n                \n                if(start == size) {\n                    return true;\n                }\n            }\n\t\t}\n        return false;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"repeated-substring-pattern","has_notes":false,"flag_type":1}