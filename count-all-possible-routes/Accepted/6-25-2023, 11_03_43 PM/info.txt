{"id":979461042,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1687714423,"status":10,"status_display":"Accepted","runtime":"612 ms","url":"/submissions/detail/979461042/","is_pending":"Not Pending","title":"Count All Possible Routes","memory":"12 MB","code":"class Solution {\npublic:\n    int countRoutes(vector<int>& locations, int start, int finish, int fuel) {\n\n         int n = locations.size();\n         int mod = 1e9 + 7;\n         vector<vector<int>>dp(n,vector<int>(fuel+1));\n\n         dp[start][fuel]=1;\n\n\n         for(int f = fuel;f>=0;f--){\n            for(int i=0;i<n;i++){\n                for(int j=0;j<n;j++){\n\n                    int diff = abs(locations[i] - locations[j]);\n\n                    if(i != j && f >= diff)\n                    dp[j][f-diff] = (dp[j][f-diff]%mod + dp[i][f]%mod)%mod;\n                }\n            }\n         }\n\n         int ans = 0;\n\n         for(int i=0;i<=fuel;i++)\n          ans = (ans%mod + dp[finish][i]%mod)%mod;\n\n        return ans;   \n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"count-all-possible-routes","has_notes":false,"flag_type":1}