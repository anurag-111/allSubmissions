{"id":869227865,"lang":"cpp","lang_name":"C++","time":"8 months, 3 weeks","timestamp":1672598110,"status":15,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/869227865/","is_pending":"Not Pending","title":"Remove Linked List Elements","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* removeElements(ListNode* head, int val) {\n        if(!head)\n        return head;\n        \n        // This is for the case when a linked list is like this: \n        //1->1->2->null\n    \n        ListNode* del;\n        while(head != NULL && head->val == val) {\n            del = head;\n            head = head->next;    \n            delete del;\n        }\n\n        ListNode* temp = head;\n        while(temp->next != NULL) {\n            if(temp->next->val == val) {\n                del = temp->next;\n                temp->next = temp->next->next;\n                delete del;\n\n            } else {\n                temp = temp->next;\n            }\n                \n        }\n        return head;\n    }\n};","compare_result":"110000000000000000000000000000000000000000000000000000000000000000","title_slug":"remove-linked-list-elements","has_notes":false,"flag_type":1}