{"id":900564961,"lang":"java","lang_name":"Java","time":"7Â months","timestamp":1676751740,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/900564961/","is_pending":"Not Pending","title":"Flatten Nested List Iterator","memory":"44.8 MB","code":"/**\n * // This is the interface that allows for creating nested lists.\n * // You should not implement it, or speculate about its implementation\n * public interface NestedInteger {\n *\n *     // @return true if this NestedInteger holds a single integer, rather than a nested list.\n *     public boolean isInteger();\n *\n *     // @return the single integer that this NestedInteger holds, if it holds a single integer\n *     // Return null if this NestedInteger holds a nested list\n *     public Integer getInteger();\n *\n *     // @return the nested list that this NestedInteger holds, if it holds a nested list\n *     // Return empty list if this NestedInteger holds a single integer\n *     public List<NestedInteger> getList();\n * }\n */\npublic class NestedIterator implements Iterator<Integer> {\n    \n    List<Integer> flattenList = null;\n    List<NestedInteger> nestedIntegerList = null;\n    private int current = 0;\n    \n    public NestedIterator(List<NestedInteger> nestedList) {\n        flattenList = new ArrayList<>();\n        nestedIntegerList = nestedList;\n        \n        for (NestedInteger nestedInteger : nestedIntegerList) {\n            helper(nestedInteger);\n        }\n    }\n\n    @Override\n    public Integer next() {\n        \n        if (hasNext()) {\n            return flattenList.get(current++);\n        }\n        \n        return null;\n    }\n\n    @Override\n    public boolean hasNext() {\n        \n        return current < flattenList.size();\n    }\n    \n    private void helper(NestedInteger nestedInteger) {\n        \n        if (nestedInteger.isInteger()) {\n                flattenList.add(nestedInteger.getInteger());\n        } else {\n            for (NestedInteger value : nestedInteger.getList()) {\n                helper(value);\n            }\n        }\n        \n    }\n}\n\n/**\n * Your NestedIterator object will be instantiated and called as such:\n * NestedIterator i = new NestedIterator(nestedList);\n * while (i.hasNext()) v[f()] = i.next();\n */","compare_result":"1111111111111111111111111111111111111111111","title_slug":"flatten-nested-list-iterator","has_notes":false,"flag_type":1}