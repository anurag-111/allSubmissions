{"id":833929178,"lang":"cpp","lang_name":"C++","time":"10 months, 3 weeks","timestamp":1667211721,"status":10,"status_display":"Accepted","runtime":"787 ms","url":"/submissions/detail/833929178/","is_pending":"Not Pending","title":"Non-overlapping Intervals","memory":"89.9 MB","code":"class Solution {\npublic:\n    int eraseOverlapIntervals(vector<vector<int>>& intervals) {\n        int count = 0, left = 0, right = 1, size = intervals.size();\n        \n        sort(intervals.begin(), intervals.end());\n        while(right < size) {\n            //case 1:\n            if(intervals[left][1] <= intervals[right][0]) {\n                left = right;\n                right++;\n            }\n            //case 2:\n            else if(intervals[left][1] <= intervals[right][1]) {\n                count++;\n                right++;\n            }\n            //case 3:\n            else if(intervals[left][1] > intervals[right][1]) {\n                count++;\n                left = right;\n                right++;\n            }\n        }\n        return count;\n    }\n};\n\n// Case 1:- Non-overlapping\n// ------------------   -----------------\n// |   Interval 1   |   |   Interval 2  |\n// ------------------   -----------------\n\n//Case 2:- Partial Overlapping\n// ------------------\n// |   Interval 1   |\n// ------------------\n//            ------------------\n//            |    Interval 2  |\n//            ------------------\n\n//Case 3:- Complete Overlapping\n//  --------------------\n//  |    Interval 1    |\n//  --------------------\n//     --------------\n//     | Interval 2 |\n//     --------------\n","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"non-overlapping-intervals","has_notes":false,"flag_type":1}