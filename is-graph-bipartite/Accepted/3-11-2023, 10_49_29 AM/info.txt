{"id":913035650,"lang":"cpp","lang_name":"C++","time":"6 months, 2 weeks","timestamp":1678511969,"status":10,"status_display":"Accepted","runtime":"35 ms","url":"/submissions/detail/913035650/","is_pending":"Not Pending","title":"Is Graph Bipartite?","memory":"16.3 MB","code":"class Solution {\npublic:\n    bool isBipartite(vector<vector<int>>& graph) {\n        \n        int n = graph.size();\n        vector<vector<int>> adj(n,vector<int>());\n        bool isbipartite = true;\n\n        for(int i = 0; i < n; i++){\n            for(int j = 0;j < graph[i].size(); j++){\n                adj[i].push_back(graph[i][j]);\n            }\n        }\n\n        vector<int> color(n, -1);\n        queue<int> q;\n        \n        for(int st = 0; st < n; st++) {\n\n            if(color[st] == -1) {\n                q.push(st);\n                color[st] = 0;\n                while(!q.empty()) {\n                    int u = q.front();\n                    q.pop();\n                    for(int v : adj[u]) {\n                        if(color[v] == -1){\n                            color[v] = 1 - color[u];\n                            q.push(v);\n                        } else {\n                            isbipartite &= color[u] !=color[v];\n                        }\n                    }\n                }\n            }\n        }\n        return isbipartite;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"is-graph-bipartite","has_notes":false,"flag_type":1}