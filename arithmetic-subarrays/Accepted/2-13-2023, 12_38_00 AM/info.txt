{"id":896729527,"lang":"cpp","lang_name":"C++","time":"7 months, 1 week","timestamp":1676228880,"status":10,"status_display":"Accepted","runtime":"108 ms","url":"/submissions/detail/896729527/","is_pending":"Not Pending","title":"Arithmetic Subarrays","memory":"38.7 MB","code":"class Solution {\npublic:\n    vector<bool> checkArithmeticSubarrays(vector<int>& nums, vector<int>& l, vector<int>& r) {\n        vector<bool> res;\n        for (int i = 0, j = 0; i < l.size(); i++) {\n           \n            int x = l[i];\n            int y = r[i];\n            vector<int> vec;\n            for(int i = x; i <= y; i++) {\n                vec.push_back(nums[i]);\n            }\n\n            sort(vec.begin(), vec.end());\n\n            for (j = 2; j < vec.size(); ++j) {\n               if (vec[j] - vec[j - 1] != vec[1] - vec[0]) {\n                     break;\n                }\n            }\n                   \n            if(j == vec.size()) {\n                res.push_back(true);\n            } else {\n                res.push_back(false);\n            }\n        }\n        return res;\n    }\n};\n\n// Time Complexity : \n    // O(m * n * log n), where m is the number of queries\n\n// Memory Complexity : \n    // O(n) to make a copy of an array.","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"arithmetic-subarrays","has_notes":false,"flag_type":1}