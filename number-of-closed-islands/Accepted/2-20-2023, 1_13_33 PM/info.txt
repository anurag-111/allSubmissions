{"id":901418221,"lang":"java","lang_name":"Java","time":"7Â months","timestamp":1676879013,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/901418221/","is_pending":"Not Pending","title":"Number of Closed Islands","memory":"43.1 MB","code":"class Solution {\n\n    public int closedIsland(int[][] grid) {\n        int count = 0;\n        for (int i = 0; i < grid.length; i++) {\n            for (int j = 0; j < grid[0].length; j++) {\n                if (grid[i][j] == 0) {\n                    if (dfs(i, j, grid)) {\n                        count++;\n                    }\n                }\n            }\n        }\n        return count;\n    }\n\n    private boolean dfs(int i, int j, int[][] grid) {\n        if (i < 0 || j < 0 || i >= grid.length || j >= grid[0].length) {\n            return false;\n        }\n\n        if (grid[i][j] == 1 || grid[i][j] == -1) {\n            return true;\n        }\n\n        grid[i][j] = -1;\n\n        \n        // return dfs(i+1, j, grid) && dfs(i, j+1,grid) && dfs(i-1, j, grid) && dfs(i, j-1, grid);\n        boolean d1 = dfs(i+1, j, grid);\n        boolean d2 = dfs(i, j+1,grid);\n        boolean d3 = dfs(i-1, j, grid);\n        boolean d4 = dfs(i, j-1, grid);\n        return d1 && d2 && d3 && d4;\n    }\n}","compare_result":"11111111111111111111111111111111111111111111111","title_slug":"number-of-closed-islands","has_notes":false,"flag_type":1}