{"id":953791968,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1684571380,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/953791968/","is_pending":"Not Pending","title":"Evaluate Division","memory":"8.2 MB","code":"class Solution {\n    unordered_map<string, vector<pair<string, double>>> adjList;\n    unordered_map<string, bool> visited;\n    double queryAns;\npublic:\n    \n    bool dfs(string startNode, string endNode, double runningProduct){\n        \n        if(startNode == endNode and adjList.find(startNode)!=adjList.end()) {\n            queryAns = runningProduct;\n            return true;\n            \n        }\n        \n        bool tempAns = false;\n        visited[startNode] = true;\n        \n        for(int i = 0; i < adjList[startNode].size(); i++){\n            if(!visited[adjList[startNode][i].first]){\n                tempAns = dfs(adjList[startNode][i].first, endNode, runningProduct*adjList[startNode][i].second);\n                if(tempAns){\n                    break;\n                }\n            }\n        }\n        \n        visited[startNode] = false;\n        \n        return tempAns;\n        \n    }\n    \n    vector<double> calcEquation(vector<vector<string>>& equations, vector<double>& values, vector<vector<string>>& queries) {\n        \n        \n        int n = equations.size(), m = queries.size();\n        vector<double> ans(m);\n        \n        for(int i = 0; i < n ; i++){\n            \n            adjList[equations[i][0]].push_back({equations[i][1], values[i]});\n            adjList[equations[i][1]].push_back({equations[i][0], 1/values[i]});\n            visited[equations[i][0]] = false;\n            visited[equations[i][1]] = false;\n\n        }\n        \n        for(int i = 0; i < m ; i++){\n            \n            queryAns = 1;\n            bool pathFound = dfs(queries[i][0], queries[i][1], 1);            \n            if(pathFound) ans[i] = queryAns;\n            else ans[i] = -1;\n            \n        }\n        \n        return ans;\n        \n    }\n};","compare_result":"111111111111111111111111","title_slug":"evaluate-division","has_notes":false,"flag_type":1}