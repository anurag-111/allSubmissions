{"id":911332159,"lang":"cpp","lang_name":"C++","time":"6 months, 2 weeks","timestamp":1678261209,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/911332159/","is_pending":"Not Pending","title":"Sum of Left Leaves","memory":"13.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int ans = 0;\n    void dfs(TreeNode *node) {\n        if(node) {\n            if(node->left) {\n                if(node->left->left == NULL and node->left->right == NULL) {\n                    ans += node->left->val;\n                }\n                dfs(node->left); \n            }\n            if(node->right) {\n                dfs(node->right);\n            }\n        }\n    }\n    int sumOfLeftLeaves(TreeNode* root) {\n        dfs(root);\n        return ans;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"sum-of-left-leaves","has_notes":false,"flag_type":1}