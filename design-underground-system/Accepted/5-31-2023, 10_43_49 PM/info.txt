{"id":961092230,"lang":"cpp","lang_name":"C++","time":"3 months, 3 weeks","timestamp":1685553229,"status":10,"status_display":"Accepted","runtime":"175 ms","url":"/submissions/detail/961092230/","is_pending":"Not Pending","title":"Design Underground System","memory":"58.6 MB","code":"class UndergroundSystem {\npublic:\n    unordered_map<int, pair<string, int>> checkInMap; // Uid - {StationName, Time}\n    unordered_map<string, pair<double, int>> routeMap; // RouteName - {TotalTime, Count}\n    \n    UndergroundSystem() {}\n    \n    void checkIn(int id, string stationName, int t) {\n        checkInMap[id] = {stationName, t};\n    }\n    \n    void checkOut(int id, string stationName, int t) {\n        auto checkIn = checkInMap[id];\n        checkInMap.erase(id); // Remove after using it which will not make HashTable big\n            \n        string routeName = checkIn.first + \"_\" + stationName;\n        routeMap[routeName].first += t - checkIn.second;\n        routeMap[routeName].second += 1;\n    }\n    \n    double getAverageTime(string startStation, string endStation) {\n        string routeName = startStation + \"_\" + endStation;\n        auto& route = routeMap[routeName];\n        return route.first / route.second;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111","title_slug":"design-underground-system","has_notes":false,"flag_type":1}