{"id":887837694,"lang":"java","lang_name":"Java","time":"7 months, 3 weeks","timestamp":1675050506,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/887837694/","is_pending":"Not Pending","title":"Task Scheduler","memory":"42.8 MB","code":"class Solution {\n\tpublic int leastInterval(char[] tasks, int n) {\n\t\tif (tasks == null || tasks.length == 0) {\n\t\t\treturn 0;\n\t\t}\n\t\tint m = tasks.length;\n\t\tint[] cnt = new int[26];\n\t\t/* Build the count array with frequency of each task */\n\t\tfor (char c: tasks) {\n\t\t\tcnt[c - 'A']++;\n\t\t}\n\t\tArrays.sort(cnt);\n\t\t/* Get maximum frequency task  and calculate max idle spaces*/\n        int max = cnt[25]-1;\n\t\tint spaces = max * n;\n\t\t\n\t\t/* Iterate over rest of the array and reduce the idle space count */\n\t\tfor (int i = 24; i >= 0; i--) {\n\t\t\tspaces -= Math.min(max, cnt[i]);\n\t\t}\n\t\t/* Handle cases when spaces become negative */\n\t\tspaces = Math.max(0, spaces);\n\t\treturn tasks.length + spaces;\n\t}\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"task-scheduler","has_notes":false,"flag_type":1}