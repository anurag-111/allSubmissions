{"id":997292835,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1689659857,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/997292835/","is_pending":"Not Pending","title":"Asteroid Collision","memory":"18 MB","code":"class Solution {\npublic:\n    vector<int> asteroidCollision(vector<int>& asteroids) {\n        stack<int> st;\n        for(int i = 0; i < asteroids.size(); i++) {\n            int current = asteroids[i];\n\n            // case 1 : moves to right\n            if(current > 0) {\n                st.push(current);\n            } \n            // case 2 : moves to left\n            else {    \n                // case 2.1 : collision occurs \n                while(!st.empty() && st.top() < abs(current) && st.top() > 0) {\n                    st.pop();\n                }\n\n                // case 2.2 : the negative survives\n                if(st.empty() || st.top() <= 0) {\n                    st.push(current);\n                }\n\n                // case 2.3 : equal magnitude\n                if(st.top() == abs(current)) {\n                    st.pop();\n                }\n            }\n        }\n\n        int size = st.size();\n        vector<int> result(size);\n        while(!st.empty()) {\n            result[size - 1] = st.top();\n            st.pop();\n            size--;\n        }\n\n        return result;\n\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"asteroid-collision","has_notes":false,"flag_type":1}