{"id":873485012,"lang":"cpp","lang_name":"C++","time":"8 months, 2 weeks","timestamp":1673113085,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/873485012/","is_pending":"Not Pending","title":"Same Tree","memory":"9.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isSameTree(TreeNode* p, TreeNode* q) {\n        //pre order traversal = root -> left -> right \n        \n        if (p == NULL && q == NULL) {\n            return true;\n        }\n        if (p == NULL || q == NULL) {\n            return false;\n        }\n        \n        // if (p == NULL || q == NULL) {\n        //     return (p == q);\n        // }\n        \n        return (( p->val == q->val ) && \n                isSameTree( p->left, q->left ) && \n                isSameTree( p->right, q->right ));\n    }\n};\n\n","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"same-tree","has_notes":false,"flag_type":1}