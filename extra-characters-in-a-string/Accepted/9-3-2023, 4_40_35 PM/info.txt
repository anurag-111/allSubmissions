{"id":1039370006,"lang":"cpp","lang_name":"C++","time":"2 weeks, 4 days","timestamp":1693739435,"status":10,"status_display":"Accepted","runtime":"139 ms","url":"/submissions/detail/1039370006/","is_pending":"Not Pending","title":"Extra Characters in a String","memory":"80.7 MB","code":"class Solution {\npublic:\n    int minExtraChar(string s, vector<string>& dictionary) {\n        unordered_set<string> dict;\n        \n        // Add dictionary words to a set for faster lookup\n        for (const string& word : dictionary) {\n            dict.insert(word);\n        }\n        \n        int N = s.length();\n        vector<int> dp(N, 0);  // Dynamic programming array to store minimum extra characters\n        \n        // Check if the first character of the string is in the dictionary\n        // If not, we need at least one extra character\n        if (dict.find(s.substr(0, 1)) == dict.end()) {\n            dp[0] = 1;\n        }\n        \n        for (int i = 1; i < N; i++) {\n            dp[i] = dp[i - 1] + 1;  // Assume we need to add one more character\n            \n            // Check if the substring from the start to the current index is in the dictionary\n            // If it is, no extra characters are needed\n            if (dict.find(s.substr(0, i + 1)) != dict.end()) {\n                dp[i] = 0;\n            }\n            \n            // Try to find a substring from the leftmost character to the current index\n            // that is in the dictionary, and update the minimum extra characters needed\n            for (int left = 1; left <= i; left++) {\n                if (dict.find(s.substr(left, i - left + 1)) != dict.end()) {\n                    dp[i] = min(dp[i], dp[left - 1]);\n                }\n            }\n        }\n        \n        return dp[N - 1];  // Return the minimum extra characters needed\n    }\n};","compare_resulttitle_slug":"extra-characters-in-a-string","has_notes":false,"flag_type":1}