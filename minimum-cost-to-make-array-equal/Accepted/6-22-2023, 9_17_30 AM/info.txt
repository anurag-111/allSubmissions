{"id":976798596,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1687405650,"status":10,"status_display":"Accepted","runtime":"109 ms","url":"/submissions/detail/976798596/","is_pending":"Not Pending","title":"Minimum Cost to Make Array Equal","memory":"38.4 MB","code":"class Solution {\npublic:\n    long long helper(vector<int>& nums, vector<int>& cost, int all) {\n    long long totalCost = 0LL;\n    for (int i = 0; i < nums.size(); i++) {\n        totalCost += 1LL * abs(nums[i] - all) * cost[i];\n    }\n    return totalCost;\n}\n\nlong long minCost(vector<int>& nums, vector<int>& cost) {\n    int left = nums[0];\n    int right = nums[0];\n    for (int i : nums) {\n        left = min(left, i);\n        right = max(right, i);\n    }\n    long long ans = 0;\n    while (left < right) {\n        int mid = (left + right) / 2;\n        long long cost1 = helper(nums, cost, mid);\n        long long cost2 = helper(nums, cost, mid + 1);\n        if (cost1 > cost2) {\n            left = mid + 1;\n            ans = cost2;\n        } else {\n            right = mid;\n            ans = cost1;\n        }\n    }\n    return ans;\n}\n};","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"minimum-cost-to-make-array-equal","has_notes":false,"flag_type":1}