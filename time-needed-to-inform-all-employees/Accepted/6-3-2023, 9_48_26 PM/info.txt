{"id":963074234,"lang":"cpp","lang_name":"C++","time":"3 months, 2 weeks","timestamp":1685809106,"status":10,"status_display":"Accepted","runtime":"525 ms","url":"/submissions/detail/963074234/","is_pending":"Not Pending","title":"Time Needed to Inform All Employees","memory":"157.9 MB","code":"#include <unordered_map>\n#include <vector>\n\nclass Solution {\npublic:\n    std::unordered_map<int, std::vector<int>> subordinates;\n    int totalMinutes = 0;\n    int maxMinutes = 0;\n    \n    void dfs(int manager, std::vector<int>& informTime) {\n        maxMinutes = std::max(maxMinutes, totalMinutes);\n        \n        for (auto subordinate : subordinates[manager]) {\n            totalMinutes += informTime[manager];\n            dfs(subordinate, informTime);\n            totalMinutes -= informTime[manager];  // backtrack\n        }\n    }\n    \n    int numOfMinutes(int n, int headID, std::vector<int>& manager, std::vector<int>& informTime) {\n        for (int i = 0; i < n; i++) {\n            int directManager = manager[i];\n            if (directManager != -1) {\n                subordinates[directManager].push_back(i);\n            }\n        }\n        \n        dfs(headID, informTime);\n        return maxMinutes;\n    }\n};\n","compare_result":"111111111111111111111111111111111111111","title_slug":"time-needed-to-inform-all-employees","has_notes":false,"flag_type":1}