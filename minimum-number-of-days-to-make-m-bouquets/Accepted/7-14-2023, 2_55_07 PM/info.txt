{"id":994179903,"lang":"cpp","lang_name":"C++","time":"2 months, 1 week","timestamp":1689326707,"status":10,"status_display":"Accepted","runtime":"222 ms","url":"/submissions/detail/994179903/","is_pending":"Not Pending","title":"Minimum Number of Days to Make m Bouquets","memory":"66.7 MB","code":"class Solution {\npublic:\n    /**\n     * Checks if it is possible to create the desired number of bouquets within a given day.\n     *\n     * @param bloomDay The array representing the bloom day of each flower.\n     * @param day The current day to check.\n     * @param requiredBouquets The required number of bouquets.\n     * @param flowersPerBouquet The number of flowers per bouquet.\n     * @return True if it is possible to create the desired number of bouquets, False otherwise.\n     */\n    static bool isPossible(vector<int>& bloomDay, int day, int requiredBouquets, int flowersPerBouquet) {\n        int count = 0;\n        int bouquetCount = 0;\n\n        for (int i = 0; i < bloomDay.size(); i++) {\n            if (bloomDay[i] <= day) {\n                count++;\n            } else {\n                bouquetCount += (count / flowersPerBouquet);\n                count = 0;\n            }\n        }\n\n        bouquetCount += (count / flowersPerBouquet);\n        return bouquetCount >= requiredBouquets;\n    }\n\n    /**\n     * Finds the minimum number of days required to create the desired number of bouquets.\n     *\n     * @param bloomDay The array representing the bloom day of each flower.\n     * @param requiredBouquets The required number of bouquets.\n     * @param flowersPerBouquet The number of flowers per bouquet.\n     * @return The minimum number of days required, -1 if it is impossible to create the desired number of bouquets.\n     */\n    static int minDays(vector<int>& bloomDay, int requiredBouquets, int flowersPerBouquet) {\n        long long totalFlowers = (long long)(requiredBouquets) * (long long)(flowersPerBouquet);\n\n        // Impossible case: there are fewer flowers than needed for the desired number of bouquets\n        if (bloomDay.size() < totalFlowers) {\n            return -1;\n        }\n\n        int minDay = INT_MAX;\n        int maxDay = INT_MIN;\n\n        // Find the minimum and maximum bloom days\n        for (int i = 0; i < bloomDay.size(); i++) {\n            if (minDay > bloomDay[i]) {\n                minDay = bloomDay[i];\n            }\n            if (maxDay < bloomDay[i]) {\n                maxDay = bloomDay[i];\n            }\n        }\n\n        int low = minDay;\n        int high = maxDay;\n\n        // Binary search to find the minimum possible day\n        while (low <= high) {\n            int mid = low + (high - low) / 2;\n\n            if (isPossible(bloomDay, mid, requiredBouquets, flowersPerBouquet)) {\n                high = mid - 1;\n            } else {\n                low = mid + 1;\n            }\n        }\n\n        return low;\n    }\n};\n\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-number-of-days-to-make-m-bouquets","has_notes":false,"flag_type":1}