{"id":901320471,"lang":"cpp","lang_name":"C++","time":"7Â months","timestamp":1676866716,"status":10,"status_display":"Accepted","runtime":"22 ms","url":"/submissions/detail/901320471/","is_pending":"Not Pending","title":"Max Area of Island","memory":"23.4 MB","code":"class Solution {\nprivate:\n    int max_area = 0;\n    int cur_area = 0;\n\n    void search(vector<vector<int>>& grid, int i, int j) {\n        if(i < 0 || j < 0 || i >= grid.size() || j >= grid[0].size() || grid[i][j] != 1) {\n            return;\n        }\n\n        grid[i][j] = -1;\n        cur_area++;\n        \n        search(grid, i + 1, j);\n        search(grid, i, j + 1);\n        search(grid, i - 1, j);\n        search(grid, i, j - 1);\n        \n\n    }\n\npublic:\n    int maxAreaOfIsland(vector<vector<int>>& grid) {\n        for(int row = 0; row < grid.size(); row++) {\n            for(int col = 0; col < grid[0].size(); col++) {\n                if(grid[row][col] == 1) {\n                    cur_area = 0;\n                    search(grid, row, col);\n                    max_area = max(max_area, cur_area);\n                }\n            }\n        }\n        return max_area;\n    }\n};","compare_resulttitle_slug":"max-area-of-island","has_notes":false,"flag_type":1}