{"id":975894337,"lang":"cpp","lang_name":"C++","time":"3Â months","timestamp":1687296381,"status":10,"status_display":"Accepted","runtime":"260 ms","url":"/submissions/detail/975894337/","is_pending":"Not Pending","title":"K Radius Subarray Averages","memory":"137.6 MB","code":"class Solution {\n\npublic:\n\n    vector<int> getAverages(vector<int>& nums, int k) {\n\n        int n = nums.size();\n\n        int windowSize = 2 * k + 1;\n\n        vector<int> ans(n, -1);\n\n        if (n < windowSize) {\n\n            return ans;\n\n        }\n\n        vector<long long> prefixSum(n + 1);\n\n        for (int i = 0; i < n; ++i) {\n\n            prefixSum[i + 1] = prefixSum[i] + nums[i];\n\n        }\n\n        for (int i = k; i + k < n; ++i) {\n\n            ans[i] = (prefixSum[i + k + 1] - prefixSum[i - k]) / windowSize;\n\n        }\n\n        return ans;\n\n    }\n\n};\n        \n\n ","compare_result":"111111111111111111111111111111111111111","title_slug":"k-radius-subarray-averages","has_notes":false,"flag_type":1}