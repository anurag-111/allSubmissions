{"id":1043030423,"lang":"cpp","lang_name":"C++","time":"1 week, 6 days","timestamp":1694092016,"status":10,"status_display":"Accepted","runtime":"26 ms","url":"/submissions/detail/1043030423/","is_pending":"Not Pending","title":"Lowest Common Ancestor of a Binary Search Tree","memory":"23.3 MB","code":"// Iterative Approach\nclass Solution {\npublic:\n    TreeNode* lowestCommonAncestor(TreeNode* root, TreeNode* p, TreeNode* q) {\n        while(root) {\n            if(root -> val > p -> val && root -> val > q -> val) {\n                // Left sub-tree\n                root = root -> left;\n            } else if(root -> val < p -> val && root -> val < q -> val) {\n                // Right sub-tree\n                root = root -> right;\n            } else {\n                // Found the LCA\n                return root;\n            }\n        }\n        return NULL;\n    }\n};\n\n// TC : O(N)\n// SC : O(1)","compare_result":"111111111111111111111111111111","title_slug":"lowest-common-ancestor-of-a-binary-search-tree","has_notes":false,"flag_type":1}