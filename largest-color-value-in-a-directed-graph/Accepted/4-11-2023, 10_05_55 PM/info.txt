{"id":932004574,"lang":"cpp","lang_name":"C++","time":"5 months, 1 week","timestamp":1681230955,"status":10,"status_display":"Accepted","runtime":"673 ms","url":"/submissions/detail/932004574/","is_pending":"Not Pending","title":"Largest Color Value in a Directed Graph","memory":"170 MB","code":"class Solution {\r\npublic:\r\n    int largestPathValue(string colors, vector<vector<int>>& edges) {\r\n        int n = colors.size();\r\n        vector<int> indegrees(n, 0);\r\n        vector<vector<int>> graph(n, vector<int>());\r\n\r\n        for (vector<int>& edge : edges) {\r\n            graph[edge[0]].push_back(edge[1]);\r\n            indegrees[edge[1]]++;\r\n        }\r\n\r\n        queue<int> zero_indegree;\r\n        for (int i = 0; i < n; i++) {\r\n            if (indegrees[i] == 0) {\r\n                zero_indegree.push(i);\r\n            }\r\n        }\r\n\r\n        vector<vector<int>> counts(n, vector<int>(26, 0));\r\n        for (int i = 0; i < n; i++) {\r\n            counts[i][colors[i] - 'a']++;\r\n        }\r\n\r\n        int max_count = 0;\r\n        int visited = 0;\r\n\r\n        while (!zero_indegree.empty()) {\r\n            int u = zero_indegree.front();\r\n            zero_indegree.pop();\r\n            visited++;\r\n            for (int v : graph[u]) {\r\n                for (int i = 0; i < 26; i++) {\r\n                    counts[v][i] = max(counts[v][i], counts[u][i] + (colors[v] - 'a' == i ? 1 : 0));\r\n                }\r\n                indegrees[v]--;\r\n                if (indegrees[v] == 0) {\r\n                    zero_indegree.push(v);\r\n                }\r\n            }\r\n            max_count = max(max_count, *max_element(counts[u].begin(), counts[u].end()));\r\n        }\r\n        \r\n        return visited == n ? max_count : -1;\r\n    }\r\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"largest-color-value-in-a-directed-graph","has_notes":false,"flag_type":1}