{"id":876955561,"lang":"cpp","lang_name":"C++","time":"8 months, 1 week","timestamp":1673547272,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/876955561/","is_pending":"Not Pending","title":"Binary Tree Postorder Traversal","memory":"8.6 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\nprivate: \n    void inorder(TreeNode* root, vector<int>& nodes) {\n        if(root == NULL) {\n            return;\n        }\n        inorder(root->left, nodes);\n        inorder(root->right, nodes);\n        nodes.push_back(root->val);\n    }\npublic:\n    vector<int> postorderTraversal(TreeNode* root) {\n        vector<int> nodes;\n        inorder(root, nodes);\n        return nodes;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-postorder-traversal","has_notes":false,"flag_type":1}