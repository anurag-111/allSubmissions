{"id":876086562,"lang":"cpp","lang_name":"C++","time":"8 months, 1 week","timestamp":1673438814,"status":10,"status_display":"Accepted","runtime":"14 ms","url":"/submissions/detail/876086562/","is_pending":"Not Pending","title":"Convert Sorted Array to Binary Search Tree","memory":"21.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\nprivate: \n    TreeNode* buildBST(vector<int>& nums, int left, int right) {\n        if (left > right) {\n            return NULL;\n        }\n        int mid = (left) + (right - left)/2;\n        TreeNode* root = new TreeNode(nums[mid]);\n        root->left = buildBST(nums, left, mid - 1);\n        root->right = buildBST(nums, mid + 1, right);\n        return root;\n    }\n\npublic:\n    TreeNode* sortedArrayToBST(vector<int>& nums) {\n        int left = 0;\n        int right = nums.size() - 1;\n        return buildBST(nums, left, right);\n    }\n};","compare_result":"1111111111111111111111111111111","title_slug":"convert-sorted-array-to-binary-search-tree","has_notes":false,"flag_type":1}