{"id":896129343,"lang":"cpp","lang_name":"C++","time":"7 months, 1 week","timestamp":1676146624,"status":10,"status_display":"Accepted","runtime":"5 ms","url":"/submissions/detail/896129343/","is_pending":"Not Pending","title":"Multiply Strings","memory":"6.7 MB","code":"class Solution {\npublic:\n    string multiply(string num1, string num2) {\n        if(num1 == \"\" || num2 == \"\") {\n            return \"\";\n        }\n            \n        if(num1==\"0\" || num2==\"0\") {\n            return \"0\";\n        }\n            \n        reverse(num1.begin(), num1.end());\n        reverse(num2.begin(), num2.end());\n        \n        //Always keep smaller number on the outer loop.\n        if(num1.size() > num2.size()) {\n            num1.swap(num2);\n        }\n        \n        int m = num1.size();\n        int n = num2.size();\n        \n        vector<int> partialProduct(m + n, 0);\n        \n        int shift =0;\n        int k;\n\n        for(int i = 0; i < m; i++){\n            int digit1 = num1[i] - '0';\n            int carry = 0;\n            k = 0;\n\n            for(int j = 0; j < n; j++){\n                int digit2 = num2[j] - '0';\n                int sum = (digit1 * digit2) + partialProduct[k + shift] + carry;\n                carry = sum / 10;\n                partialProduct[k + shift] = sum % 10;\n                k++;\n            }\n\n            if(carry) {\n                partialProduct[k + shift] += carry;\n            }\n            shift++;\n        }\n        \n        string result;\n        \n        reverse(partialProduct.begin() , partialProduct.end());\n        \n        for(int d : partialProduct){\n           result += to_string(d); \n        }\n        \n        int index = 0;\n        for(char ch : result){\n            if(ch == '0') {\n                index++;\n            } else {\n                break;\n            }\n        }\n\n        result = result.replace(0, index, \"\");\n        return result;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"multiply-strings","has_notes":false,"flag_type":1}