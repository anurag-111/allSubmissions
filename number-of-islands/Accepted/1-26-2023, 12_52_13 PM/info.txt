{"id":885509072,"lang":"java","lang_name":"Java","time":"7 months, 4 weeks","timestamp":1674717733,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/885509072/","is_pending":"Not Pending","title":"Number of Islands","memory":"57.5 MB","code":"class Solution {\n    public int numIslands(char[][] grid) {\n        int count = 0;\n        for (int i = 0; i < grid.length; i++) {\n            for (int j = 0; j < grid[0].length; j++) {\n                if (grid[i][j] == '1') {\n                    dfs_grid(grid, i, j);\n                    count++;\n                }\n            }\n        }\n        return count;\n    }\n\n    private void dfs_grid(char[][] grid, int i, int j) {\n        if (i >= 0 && i < grid.length && j < grid[0].length && j >= 0 && grid[i][j] == '1') {\n            grid[i][j] = '0';\n            dfs_grid(grid, i + 1, j);\n            dfs_grid(grid, i-1, j);\n            dfs_grid(grid, i, j + 1);\n            dfs_grid(grid, i, j - 1);\n        }\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"number-of-islands","has_notes":false,"flag_type":1}