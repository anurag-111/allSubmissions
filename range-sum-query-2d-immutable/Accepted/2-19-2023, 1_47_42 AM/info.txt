{"id":900563183,"lang":"cpp","lang_name":"C++","time":"7Â months","timestamp":1676751462,"status":10,"status_display":"Accepted","runtime":"439 ms","url":"/submissions/detail/900563183/","is_pending":"Not Pending","title":"Range Sum Query 2D - Immutable","memory":"142.7 MB","code":"class NumMatrix {\n    vector<vector<int>> matSum;\n    int row, col, sum;\npublic:\n    NumMatrix(vector<vector<int>>& matrix) {\n        row = matrix.size();\n        col = matrix[0].size();\n        matSum = vector<vector<int>>(row + 1, vector<int>(col + 1));\n       \n        //Fill sum values\n        for(int i = 1; i <= row; ++i){\n            for(int j = 1; j <= col; ++j) {\n                matSum[i][j] = matSum[i - 1][j] + matSum[i][j - 1] - matSum[i - 1][j - 1] + matrix[i - 1][j - 1];\n            }\n        }\n    }\n    \n    int sumRegion(int row1, int col1, int row2, int col2) {\n        sum = matSum[row2 + 1][col2+1] - matSum[row1][col2 + 1] - matSum[row2 + 1][col1] + matSum[row1][col1];\n        return sum;\n    }\n};\n\n/**\n * Your NumMatrix object will be instantiated and called as such:\n * NumMatrix* obj = new NumMatrix(matrix);\n * int param_1 = obj->sumRegion(row1,col1,row2,col2);\n */","compare_result":"1111111111111111111111","title_slug":"range-sum-query-2d-immutable","has_notes":false,"flag_type":1}