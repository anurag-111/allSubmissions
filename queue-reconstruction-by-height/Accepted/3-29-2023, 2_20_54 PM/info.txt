{"id":924121511,"lang":"cpp","lang_name":"C++","time":"5 months, 3 weeks","timestamp":1680079854,"status":10,"status_display":"Accepted","runtime":"97 ms","url":"/submissions/detail/924121511/","is_pending":"Not Pending","title":"Queue Reconstruction by Height","memory":"11.6 MB","code":"class Solution {\nprivate:\n    static bool comparator(vector<int>& a, vector<int>& b) {\n        if(a[0] == b[0]) {\n            return a[1] < b[1];\n        }\n\n        return a[0] < b[0];\n    }\npublic:\n    vector<vector<int>> reconstructQueue(vector<vector<int>>& people) {\n        int n = people.size();\n        sort(people.begin(), people.end(), comparator);\n\n        // Inserting elements at the correct position\n        vector<vector<int>> ans(n, vector<int> (2, -1));\n\n        for(int i = 0; i < n; i++) {\n            int count = people[i][1];\n\n            for(int j = 0; j < n; j++) {\n                // Condition when the slot is empty and no skips are left\n                if(ans[j][0] == -1 && count == 0) {\n                    ans[j][0] = people[i][0];\n                    ans[j][1] = people[i][1];\n                    break;\n                } else if(ans[j][0] == -1 || ans[j][0] >= people[i][0]) {\n                    count--;\n                }\n            }\n        }\n\n        return ans;\n    }\n};","compare_result":"111111111111111111111111111111111111","title_slug":"queue-reconstruction-by-height","has_notes":false,"flag_type":1}