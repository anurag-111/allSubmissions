{"id":998756285,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1689795084,"status":10,"status_display":"Accepted","runtime":"320 ms","url":"/submissions/detail/998756285/","is_pending":"Not Pending","title":"Sliding Window Maximum","memory":"134.6 MB","code":"class Solution {\npublic:\n    vector<int> maxSlidingWindow(vector<int>& nums, int k) {\n        deque<int> dq;\n        vector<int> result;\n        \n\n        for(int i = 0; i < nums.size(); i++) {\n            \n            // Remove the elements from the window when they exceed\n            while(!dq.empty() && dq.front() <= i - k) {\n                dq.pop_front();\n            }\n\n            // Remove the smaller elements\n            while(!dq.empty() && nums[dq.back()] <= nums[i]) {\n                dq.pop_back();\n            }\n\n            // Insert the current index\n            dq.push_back(i);\n\n            // Insertion of maximum element\n            if(i >= k - 1) {\n                result.push_back(nums[dq.front()]);\n            }\n        }\n\n        return result;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111","title_slug":"sliding-window-maximum","has_notes":false,"flag_type":1}