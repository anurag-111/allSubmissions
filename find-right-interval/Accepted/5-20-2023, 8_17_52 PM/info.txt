{"id":953948518,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1684594072,"status":10,"status_display":"Accepted","runtime":"92 ms","url":"/submissions/detail/953948518/","is_pending":"Not Pending","title":"Find Right Interval","memory":"28.3 MB","code":"class Solution {\npublic:\n    vector<int> findRightInterval(vector<vector<int>>& intervals) {\n        // Create a map to store the starting points of intervals and their corresponding indices\n        map<int, int> startPoints;\n\n        // Create a vector to store the result\n        vector<int> result;\n\n        // Process intervals and populate the map\n        for (int i = 0; i < intervals.size(); i++) {\n            startPoints[intervals[i][0]] = i;\n        }\n\n        // Find the right interval for each interval in the input vector\n        for (int i = 0; i < intervals.size(); i++) {\n            // Use lower_bound to find the first interval with a starting point greater than or equal to the current interval's ending point\n            auto it = startPoints.lower_bound(intervals[i][1]);\n\n            if (it != startPoints.end()) {\n                // A right interval is found, push its index into the result vector\n                result.push_back(it->second);\n            } else {\n                // No right interval found, push -1 into the result vector\n                result.push_back(-1);\n            }\n        }\n\n        return result;\n    }\n};\n","compare_result":"1111111111111111111","title_slug":"find-right-interval","has_notes":false,"flag_type":1}