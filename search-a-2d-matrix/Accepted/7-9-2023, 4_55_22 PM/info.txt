{"id":990111241,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1688901922,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/990111241/","is_pending":"Not Pending","title":"Search a 2D Matrix","memory":"9.5 MB","code":"class Solution {\npublic:\n    /**\n     * Search for the target value in a 2D matrix.\n     * \n     * @param matrix The input matrix.\n     * @param target The value to search for.\n     * @return True if the target value is found, False otherwise.\n     */\n    bool searchMatrix(vector<vector<int>>& matrix, int target) {\n        int rows = matrix.size();                      // Number of rows in the matrix\n        int cols = matrix[0].size();                   // Number of columns in the matrix\n\n        int low = 0;                                   // Starting index of the search range\n        int high = (rows * cols) - 1;                  // Ending index of the search range\n\n        while (low <= high) {\n            int mid = low + (high - low) / 2;           // Calculate the middle index\n            int midRow = mid / cols;                    // Row index of the middle element\n            int midCol = mid % cols;                    // Column index of the middle element\n\n            int stored = matrix[midRow][midCol];        // Value stored at the middle element\n\n            if (stored == target) {\n                // Target found\n                return true;\n            } else if (stored < target) {\n                // Target is in the upper range\n                low = mid + 1;                          // Adjust the low pointer\n            } else {\n                // Target is in the lower range\n                high = mid - 1;                         // Adjust the high pointer\n            }\n        }\n\n        // Target not found\n        return false;\n    }\n};\n\n\n/*\n    Time Complexity: O(log (M * N))\n\n    Space Complexity: O(1)\n\n*/","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-a-2d-matrix","has_notes":false,"flag_type":1}