{"id":957029929,"lang":"cpp","lang_name":"C++","time":"3 months, 4 weeks","timestamp":1685012850,"status":10,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/957029929/","is_pending":"Not Pending","title":"New 21 Game","memory":"9.1 MB","code":"class Solution {\npublic:\n    double new21Game(int N, int K, int W) {\n        // Check if K is 0 or if N is greater than or equal to K + W\n        if (K == 0 || N >= K + W) {\n            return 1.0;\n        }\n        \n        vector<double> dp(N + 1); // Dynamic programming array\n        dp[0] = 1.0; // Initial probability\n        \n        double sumOfProbabilities = 1.0; // Sum of probabilities\n        double result = 0.0; // Final result\n        \n        for (int i = 1; i <= N; ++i) {\n            dp[i] = sumOfProbabilities / W; // Calculate probability for current position\n            \n            if (i < K) {\n                sumOfProbabilities += dp[i]; // Update sum of probabilities\n            } else {\n                result += dp[i]; // Accumulate result\n            }\n            \n            if (i - W >= 0) {\n                sumOfProbabilities -= dp[i - W]; // Remove old probability from sum\n            }\n        }\n        \n        return result;\n    }\n\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"new-21-game","has_notes":false,"flag_type":1}