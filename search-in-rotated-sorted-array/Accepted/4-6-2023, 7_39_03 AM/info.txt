{"id":928794078,"lang":"cpp","lang_name":"C++","time":"5 months, 2 weeks","timestamp":1680746943,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/928794078/","is_pending":"Not Pending","title":"Search in Rotated Sorted Array","memory":"11.2 MB","code":"class Solution {\npublic:\n    int search(vector<int>& nums, int target) {\n        if(nums.size() == 0){\n            return -1;\n        }\n        int low = 0, high = nums.size() - 1;\n        \n        while(low <= high){\n            int  mid = (low + (high - low) / 2);\n            \n            if(nums[mid] == target){\n                return mid;\n            }\n            \n            //if left array is sorted\n            if(nums[low] <= nums[mid]){\n                if(target >= nums[low] && target <= nums[mid]){\n                    high = mid - 1;\n                } else {\n                    low = mid + 1;\n                }\n            } \n\n            //if right array is sorted\n            else {\n                if(target >= nums[mid] && target <= nums[high]){\n                    low = mid + 1;\n                } else {\n                    high = mid - 1;\n                }\n            }\n        }\n        return -1;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"search-in-rotated-sorted-array","has_notes":false,"flag_type":1}