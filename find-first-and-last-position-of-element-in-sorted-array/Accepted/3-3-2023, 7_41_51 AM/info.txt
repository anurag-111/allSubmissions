{"id":908050572,"lang":"java","lang_name":"Java","time":"6 months, 3 weeks","timestamp":1677809511,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/908050572/","is_pending":"Not Pending","title":"Find First and Last Position of Element in Sorted Array","memory":"45.6 MB","code":"class Solution {\n    public int[] searchRange(int[] a, int target){\n            \n            int[] result = {-1, -1};\n            \n            if (a == null || a.length == 0)\n                return result;\n            \n            result[0] = findStartPosition(a, target);\n            result[1] = findEndPosition(a, target);\n            \n            return result;\n    }\n\n    public int findStartPosition(int[] a, int target){\n\n        int left = 0;\n        int right = a.length - 1;\n        int start = -1;\n        \n        while(left <= right){\n        \n            int mid = left + (right - left) / 2;\n            \n            if (a[mid] == target) {\n                    start = mid; \n                    right = mid - 1; \n            } else if (target > a[mid]) {\n                left = mid+1;\n            } else {\n                right = mid-1;\n            }\n        }\n\n        return start;\n    }\n\n    public int findEndPosition(int[] a, int target){\n        int left = 0;\n        int right = a.length - 1;\n        int end = -1;\n        \n        while(left <= right){\n            int mid = left + (right - left) / 2;\n            \n            if (a[mid] == target) {\n                end = mid;\t  \n                left = mid + 1; \n            } else if (target > a[mid]) {\n                left = mid +1;\n            } else {\n                right = mid - 1;\n            }         \n        }\n        \n        return end;\n    }\n}","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-first-and-last-position-of-element-in-sorted-array","has_notes":false,"flag_type":1}