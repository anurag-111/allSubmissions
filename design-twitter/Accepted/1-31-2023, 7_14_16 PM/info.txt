{"id":888764526,"lang":"cpp","lang_name":"C++","time":"7 months, 3 weeks","timestamp":1675172656,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/888764526/","is_pending":"Not Pending","title":"Design Twitter","memory":"7 MB","code":"class Twitter {\nprivate: \n    //pairs : [user, tweet]\n    vector<pair<int, int>> posts;\n\n    //hash map: {user -> people they follow}\n    unordered_map<int, unordered_set<int>> followMap;\n\npublic:\n    //Twitter() Initializes your twitter object.\n    Twitter() {\n        \n    }\n    \n    //Composes a new tweet with ID tweetId by the user userId.\n    void postTweet(int userId, int tweetId) {\n        posts.push_back({userId, tweetId});\n    }\n    \n    //Retrieves the 10 most recent tweet IDs in the user's news feed.\n    vector<int> getNewsFeed(int userId) {\n        //10 tweets\n        int count = 10;\n        vector<int> result;\n\n        //since postTweet pushes to the back, for recent we must loop from back\n        for (int i = posts.size() - 1; i >= 0; i--) {\n            if (count == 0) {\n                break;\n            }\n\n            int followingId = posts[i].first;\n            int tweetId = posts[i].second;\n            unordered_set<int> following = followMap[userId];\n            \n            // add to result if they are following them or if it's a tweet from themselves\n            if (following.find(followingId) != following.end() || followingId == userId) {\n                result.push_back(tweetId);\n                count--;\n            }        \n        }\n        return result;\n    }\n    \n    //The user with ID followerId started following the user with ID followeeId.\n    void follow(int followerId, int followeeId) {\n        followMap[followerId].insert(followeeId);\n    }\n    \n    //The user with ID followerId started unfollowing the user with ID followeeId.\n    void unfollow(int followerId, int followeeId) {\n        followMap[followerId].erase(followeeId);\n    }\n};\n\n/**\n * Your Twitter object will be instantiated and called as such:\n * Twitter* obj = new Twitter();\n * obj->postTweet(userId,tweetId);\n * vector<int> param_2 = obj->getNewsFeed(userId);\n * obj->follow(followerId,followeeId);\n * obj->unfollow(followerId,followeeId);\n */","compare_result":"1111111111111111","title_slug":"design-twitter","has_notes":false,"flag_type":1}