{"id":896721029,"lang":"cpp","lang_name":"C++","time":"7 months, 1 week","timestamp":1676227783,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/896721029/","is_pending":"Not Pending","title":"Determine Whether Matrix Can Be Obtained By Rotation","memory":"11.1 MB","code":"class Solution {\npublic:\n    bool findRotation(vector<vector<int>>& mat, vector<vector<int>>& target) {\n        int n = mat.size();\n\n        // rotation by 0 degree\n        if(mat == target) {                                 \n            return true;\n        }\n        \n        // more rotations with 90, 180, 270 degree's\n        int degree = 3;                          \n        \n        while(degree --) {\n            \n            // transpose\n            for(int i = 0; i < n; i ++) {\n                for(int j = i; j < n; j ++) {\n                   int temp = mat[i][j];  \n                   mat[i][j] = mat[j][i];\n                   mat[j][i] = temp;\n                }\n            }\n            \n            // reverse\n            for(int i = 0; i < n; i ++) {\n                reverse(mat[i].begin(), mat[i].end());       // reverse each row.\n            }\n            \n            // check\n            if(mat == target) {\n                return true;\n            }\n        }\n        return false;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"determine-whether-matrix-can-be-obtained-by-rotation","has_notes":false,"flag_type":1}