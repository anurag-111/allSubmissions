{"id":909614507,"lang":"java","lang_name":"Java","time":"6 months, 2 weeks","timestamp":1678030214,"status":10,"status_display":"Accepted","runtime":"59 ms","url":"/submissions/detail/909614507/","is_pending":"Not Pending","title":"Jump Game IV","memory":"54.9 MB","code":"class Solution {\n    public int minJumps(int[] arr) {\n        int n = arr.length;\n        \n        if(n == 1) return 0;\n        Map<Integer, List<Integer>> map = new HashMap<>();\n        int step = 0;\n        \n        // fill the map\n        for(int i = 0; i < n; i++){\n            map.computeIfAbsent(arr[i], v -> new ArrayList()).add(i);\n        }\n        Queue<Integer> q = new LinkedList<>();\n        q.offer(0);\n        \n        while(!q.isEmpty()){\n            step++;\n            int size = q.size();\n            for(int i = 0; i < size; i++){\n                int j = q.poll();\n            \n                if(j - 1 >= 0 && map.containsKey(arr[j - 1])){\n                    q.offer(j - 1);\n                }\n\n                if(j + 1 < n && map.containsKey(arr[j + 1])){\n                    if(j + 1 == n - 1) return step;\n                    q.offer(j + 1);\n                }\n\n                if(map.containsKey(arr[j])){\n                    for(int k : map.get(arr[j])){\n                        if(k != j){\n                            if(k == n - 1) return step;\n                            q.offer(k);\n                        }\n                    }\n                }\n                map.remove(arr[j]);\n            }\n        }\n        \n        return step;\n    }\n}","compare_result":"111111111111111111111111111111111","title_slug":"jump-game-iv","has_notes":false,"flag_type":1}