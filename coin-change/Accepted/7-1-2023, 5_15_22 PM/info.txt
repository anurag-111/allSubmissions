{"id":983705113,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1688211922,"status":10,"status_display":"Accepted","runtime":"54 ms","url":"/submissions/detail/983705113/","is_pending":"Not Pending","title":"Coin Change","memory":"13.1 MB","code":"class Solution {\nprivate:\n    static const int MAX_AMOUNT = 10010; // Maximum amount allowed\n    int dp[MAX_AMOUNT]; // Amount <= 104\n\n    int calculateMinCoins(vector<int>& coins, int amount) {\n        // Check if the amount is already 0\n        if (amount == 0) {\n            return 0;\n        }\n\n        // Check if the result for the current amount has already been calculated\n        if (dp[amount] != -1) {\n            return dp[amount];\n        }\n\n        int ans = INT_MAX;\n        // Iterate through all the available coin denominations\n        for (int coin : coins) {\n            if (amount - coin >= 0) {\n                ans = min(ans + 0LL, calculateMinCoins(coins, amount - coin) + 1LL);\n            }\n        }\n\n        // Store the calculated result for future use\n        dp[amount] = ans;\n        return ans;\n    }\n\npublic:\n    int coinChange(vector<int>& coins, int amount) {\n        memset(dp, -1, sizeof(dp)); // Initialize dp array with -1\n        int minCoins = calculateMinCoins(coins, amount);\n        return (minCoins == INT_MAX) ? -1 : minCoins;\n    }\n};\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"coin-change","has_notes":false,"flag_type":1}