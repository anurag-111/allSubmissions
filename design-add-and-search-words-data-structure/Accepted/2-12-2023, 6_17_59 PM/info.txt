{"id":896541429,"lang":"java","lang_name":"Java","time":"7 months, 1 week","timestamp":1676206079,"status":10,"status_display":"Accepted","runtime":"438 ms","url":"/submissions/detail/896541429/","is_pending":"Not Pending","title":"Design Add and Search Words Data Structure","memory":"92.9 MB","code":"class WordDictionary {\n    \n    private TrieNode root;\n    \n    public WordDictionary() {\n        root = new TrieNode();    \n    }\n    \n    public void addWord(String word) {\n        \n        TrieNode cur = root;\n        \n        for (char ch : word.toCharArray()) {\n            int index = (int)(ch - 'a');\n            \n            if (cur.children[index] == null) {\n                cur.children[index] = new TrieNode();\n            }\n            \n            cur = cur.children[index];\n        }\n        cur.isEndOfWord = true;\n    }\n    \n    public boolean search(String word) {\n        return findWord(0, word, root);\n    }\n    \n    private boolean findWord(int pos, String word, TrieNode root) {\n        \n        if (pos == word.length()) {\n            return root.isEndOfWord;\n        }\n        \n        char ch = word.charAt(pos);\n        \n        if (ch != '.') {\n            int index = (int)(ch - 'a');\n            if (root.children[index] != null) {\n                return findWord(pos + 1, word, root.children[index]);\n            }\n            \n            return false;\n        } else {\n            \n            for (int i = 0; i < 26; i++) {\n                if (root.children[i] != null && findWord(pos + 1, word, root.children[i])) {\n                    return true;\n                }\n            }\n            \n            return false;\n        }\n    }\n    \n    private class TrieNode {\n        \n        private TrieNode[] children;\n        private boolean isEndOfWord;\n        \n        public TrieNode() {\n            children = new TrieNode[26];\n            isEndOfWord = false;\n        }\n    }\n}\n\n/**\n * Your WordDictionary object will be instantiated and called as such:\n * WordDictionary obj = new WordDictionary();\n * obj.addWord(word);\n * boolean param_2 = obj.search(word);\n */","compare_result":"11111111111111111111111111111","title_slug":"design-add-and-search-words-data-structure","has_notes":false,"flag_type":1}