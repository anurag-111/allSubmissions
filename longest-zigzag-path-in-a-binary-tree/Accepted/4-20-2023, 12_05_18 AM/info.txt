{"id":936521648,"lang":"cpp","lang_name":"C++","time":"5Â months","timestamp":1681929318,"status":10,"status_display":"Accepted","runtime":"197 ms","url":"/submissions/detail/936521648/","is_pending":"Not Pending","title":"Longest ZigZag Path in a Binary Tree","memory":"94.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\n    public:\n    int maxLength = 0;\n\n    void solve(TreeNode* root, int dir, int currLength){\n        if(!root) {\n            return;\n        }\n\n        maxLength = max(maxLength, currLength);\n        solve(root->left, 0, dir ? currLength + 1 : 1);\n        solve(root->right, 1, dir ? 1 : currLength + 1);\n    }\n\n    int longestZigZag(TreeNode* root) {\n        solve(root, 0, 0);\n        solve(root, 1, 0);\n        return maxLength;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"longest-zigzag-path-in-a-binary-tree","has_notes":false,"flag_type":1}