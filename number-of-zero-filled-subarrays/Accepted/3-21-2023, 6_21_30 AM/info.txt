{"id":919151690,"lang":"cpp","lang_name":"C++","time":"6Â months","timestamp":1679359890,"status":10,"status_display":"Accepted","runtime":"181 ms","url":"/submissions/detail/919151690/","is_pending":"Not Pending","title":"Number of Zero-Filled Subarrays","memory":"107.5 MB","code":"\n\nclass Solution {\npublic:\n    long long zeroFilledSubarray(vector<int>& nums) {\n        int n = nums.size();\n        long long ans = 0;\n        long long count = 0; // count of consecutive zeros\n\n        for (int i = 0; i < nums.size(); i++) {\n            if (nums[i] == 0) {\n                count++;\n            } else {\n                ans += (count * (count + 1) / 2);\n                count = 0; // reset count\n            }\n        }\n\n        // For cases such as : nums = [0,0,0,2,0,0]\n        // The last occurence of 0's subarray count should also be added.\n        if(count) {\n            ans += (count * (count + 1) / 2);\n        }\n\n        return ans;\n    }\n};\n\n","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"number-of-zero-filled-subarrays","has_notes":false,"flag_type":1}