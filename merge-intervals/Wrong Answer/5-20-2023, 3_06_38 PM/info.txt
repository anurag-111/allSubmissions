{"id":953819540,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1684575398,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/953819540/","is_pending":"Not Pending","title":"Merge Intervals","memory":"N/A","code":"class Solution {\n    public :\n        vector<vector<int>> merge(vector<vector<int>> &intervals) {\n            if(intervals.empty()) {\n                return {};\n            }\n\n            // Sorting in increasing order of the starting time of an interval\n            sort(intervals.begin(), intervals.end());\n\n            // Creating a result vector\n            vector<vector<int>> result;\n\n            // Inserting the first interval\n            result.push_back(intervals[0]);\n            int j = 0;\n            \n            // Iterating over the intervals\n            for(int i = 0; i < intervals.size(); i++) {\n                // Overlapping occurs\n                if(result[0][1] >= intervals[i][0]) {\n                    result[0][1] = max(result[0][1], intervals[i][1]);\n                } else {\n                    j++;\n                    result.push_back(intervals[i]);\n                }\n            }\n\n            return result;\n        }\n};","compare_result":"11111111111111111000100101001111010101110011000000011011001011101011011100110110011110100101110101110100001010101000100100011000100111101001101101000000000000000000001111","title_slug":"merge-intervals","has_notes":false,"flag_type":1}