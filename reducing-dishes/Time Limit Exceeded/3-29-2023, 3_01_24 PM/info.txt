{"id":924137528,"lang":"cpp","lang_name":"C++","time":"5 months, 3 weeks","timestamp":1680082284,"status":14,"status_display":"Time Limit Exceeded","runtime":"N/A","url":"/submissions/detail/924137528/","is_pending":"Not Pending","title":"Reducing Dishes","memory":"N/A","code":"// Recursive Approach\n\nclass Solution {\nprivate:\n\n    int solve(vector<int>& satisfaction, int index, int time) {\n        if(index == satisfaction.size()) {\n            return 0;\n        }\n\n        int include = satisfaction[index] * (time + 1) + solve(satisfaction, index + 1, time + 1);\n        int exclude = 0 + solve(satisfaction, index + 1, time);\n\n        return max(include, exclude);\n    }\n\n\npublic:\n    int maxSatisfaction(vector<int>& satisfaction) {\n        sort(satisfaction.begin(), satisfaction.end());\n        return solve(satisfaction, 0, 0);\n    }\n};","compare_result":"111111111111111111100000000000000000000000000000000000000000","title_slug":"reducing-dishes","has_notes":false,"flag_type":1}