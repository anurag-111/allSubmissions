{"id":924139901,"lang":"cpp","lang_name":"C++","time":"5 months, 3 weeks","timestamp":1680082646,"status":10,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/924139901/","is_pending":"Not Pending","title":"Reducing Dishes","memory":"21 MB","code":"class Solution {\nprivate:\n\n    int solve(vector<int>& satisfaction, int index, int time, vector<vector<int>>& dp) {\n        if(index == satisfaction.size()) {\n            return 0;\n        }\n\n        if(dp[index][time] != -1) {\n            return dp[index][time];\n        }\n\n        int include = satisfaction[index] * (time + 1) + solve(satisfaction, index + 1, time + 1, dp);\n        int exclude = 0 + solve(satisfaction, index + 1, time, dp);\n\n        return dp[index][time] = max(include, exclude);\n    }\n\n\npublic:\n    int maxSatisfaction(vector<int>& satisfaction) {\n        sort(satisfaction.begin(), satisfaction.end());\n\n        int n = satisfaction.size();\n        vector<vector<int>> dp(n + 1, vector<int> (n + 1, -1));\n        return solve(satisfaction, 0, 0, dp);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111","title_slug":"reducing-dishes","has_notes":false,"flag_type":1}