{"id":1015576913,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1691493954,"status":10,"status_display":"Accepted","runtime":"42 ms","url":"/submissions/detail/1015576913/","is_pending":"Not Pending","title":"Minimum Number of Steps to Make Two Strings Anagram","memory":"16.6 MB","code":"class Solution {\npublic:\n    int minSteps(string s, string t) {\n        int charCount[26];\n        int count = 0;\n\n        // A frequency count initialised with 0\n        for(int i = 0; i < 26; i++) {\n            charCount[i] = 0;\n        }\n\n        // Traverse over the string 1 and update the count\n        for(int i = 0; i < s.size(); i++) {\n            charCount[s[i] - 'a']++;\n        }\n\n        // Traverse over the string 2 and update the count\n        for(int i = 0; i < t.size(); i++) {\n            charCount[t[i] - 'a']--;\n        }\n\n        // Count the differences\n        for(int i = 0; i < 26; i++) {\n            count += abs(charCount[i]);\n        }\n\n        // Since we've counted the manipulations twice (once for each string), \n        // we divide the count by 2 to get the actual number of manipulations \n        // needed to make the two strings identical.\n        return count / 2;\n    }\n};\n\n// Time complexity : O(N)\n// Space complexity : O(1)","compare_result":"111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-number-of-steps-to-make-two-strings-anagram","has_notes":false,"flag_type":1}