{"id":950043751,"lang":"cpp","lang_name":"C++","time":"4 months, 1 week","timestamp":1684044352,"status":10,"status_display":"Accepted","runtime":"108 ms","url":"/submissions/detail/950043751/","is_pending":"Not Pending","title":"Maximize Score After N Operations","memory":"13.8 MB","code":"class Solution {\npublic:\n    int func(vector<int>& nums, int op, int mask, vector<int>& dp, vector<vector<int>>& gcd){\n        int m = nums.size(), n = nums.size()/2;\n        if(op > n) \n            return 0;\n\n        if(dp[mask] != -1) \n            return dp[mask];\n\n        for(int i = 0; i < m; i++) {\n            if( (mask & (1 << i)) ) \n                continue;\n\n            for(int j = i + 1; j < m; j++){\n                if((mask & (1 << j)) ) \n                    continue;\n                \n                int newMask = (1 << i) | (1 << j) | mask;\n                int score = op * gcd[i][j] + func(nums, op+1, newMask, dp, gcd);\n                dp[mask] = max(dp[mask], score);\n            }\n        }\n        return dp[mask];\n    }\n\n    int maxScore(vector<int>& nums) {\n        vector<int> dp(1<<14, -1);\n\n        int m = nums.size(), n = nums.size()/2;\n        vector<vector<int>> gcd(m, vector<int>(m, 0));\n        for(int i = 0; i < m; i++){\n            for(int j = 0; j < m; j++){\n                gcd[i][j] = __gcd(nums[i], nums[j]);\n            }\n        }\n\n        return func(nums, 1, 0, dp, gcd);\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximize-score-after-n-operations","has_notes":false,"flag_type":1}