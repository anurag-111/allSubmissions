{"id":876102749,"lang":"cpp","lang_name":"C++","time":"8 months, 1 week","timestamp":1673441109,"status":10,"status_display":"Accepted","runtime":"15 ms","url":"/submissions/detail/876102749/","is_pending":"Not Pending","title":"Construct String from Binary Tree","memory":"23.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\nprivate:\n    stringstream ans;\n\npublic:\n    string tree2str(TreeNode* root) {\n        buildStr(root);\n        return ans.str();\n    }\n\n    void buildStr(TreeNode* root) {\n        ans << root->val;\n\n        if(root->left == NULL && root->right == NULL) {\n            return;\n        }\n\n        ans << '(';\n        if (root->left != NULL) {\n            buildStr(root->left);\n        }\n        ans << ')';\n\n        if (root->right != NULL) {\n            ans << '(';\n            buildStr(root->right);\n            ans << ')';\n        }\n    }\n};\n\n\n\n\n\n\n\n\n\n\n\n\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"construct-string-from-binary-tree","has_notes":false,"flag_type":1}