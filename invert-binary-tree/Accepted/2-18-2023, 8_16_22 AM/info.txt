{"id":900075553,"lang":"cpp","lang_name":"C++","time":"7Â months","timestamp":1676688382,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/900075553/","is_pending":"Not Pending","title":"Invert Binary Tree","memory":"9.8 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\n \nclass Solution {\nprivate: \n    void swap (TreeNode* curr) {\n        if (!curr) {\n            return;\n        }\n\n        swap (curr->left);\n        swap (curr->right);\n\n        TreeNode* temp = curr->left;\n        curr->left = curr->right;\n        curr->right = temp;\n    }\n\npublic:\n    TreeNode* invertTree(TreeNode* root) {\n        swap (root);\n        return root;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"invert-binary-tree","has_notes":false,"flag_type":1}