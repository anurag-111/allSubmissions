{"id":1017890030,"lang":"cpp","lang_name":"C++","time":"1 month, 1 week","timestamp":1691698095,"status":10,"status_display":"Accepted","runtime":"11 ms","url":"/submissions/detail/1017890030/","is_pending":"Not Pending","title":"Maximum Depth of Binary Tree","memory":"18.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\nprivate: \n    int dfs(TreeNode* root) {\n        if(root == NULL) {\n            return 0;\n        }\n\n        int leftVal = dfs(root->left);\n        int rightVal = dfs(root->right);\n\n        return 1 + max(leftVal, rightVal);\n    }\npublic:\n    int maxDepth(TreeNode* root) {\n        if(root == NULL) {\n            return 0;\n        }\n\n        return dfs(root);\n    }\n};","compare_result":"111111111111111111111111111111111111111","title_slug":"maximum-depth-of-binary-tree","has_notes":false,"flag_type":1}