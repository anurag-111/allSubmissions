{"id":872016074,"lang":"cpp","lang_name":"C++","time":"8 months, 2 weeks","timestamp":1672933875,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/872016074/","is_pending":"Not Pending","title":"Maximum Depth of Binary Tree","memory":"18.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int maxDepth(TreeNode* root) {\n        if (root == NULL) {\n            return 0;\n        }\n        \n        int left_height = maxDepth(root->left);\n        int right_height = maxDepth(root->right);\n        \n        return 1 + max(left_height, right_height);\n    }\n};\n\n// Time Complexity : O(n)\n// Space Complexity : O(n), worst case being the skewed tree.","compare_result":"111111111111111111111111111111111111111","title_slug":"maximum-depth-of-binary-tree","has_notes":false,"flag_type":1}