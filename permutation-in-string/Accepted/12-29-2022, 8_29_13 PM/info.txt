{"id":867553717,"lang":"java","lang_name":"Java","time":"8 months, 3 weeks","timestamp":1672325953,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/867553717/","is_pending":"Not Pending","title":"Permutation in String","memory":"41.6 MB","code":"class Solution {\n  public boolean checkInclusion(String s1, String s2) {\n    int len1 = s1.length(), len2 = s2.length();\n    if (len1 > len2) {\n        return false;\n    }\n        \n    int[] count = new int[26];\n    for (int i = 0; i < len1; i++) {\n        count[s1.charAt(i) - 'a']++;\n    }\n        \n    for (int i = 0; i < len2; i++) {\n           count[s2.charAt(i) - 'a']--;\n        if(i - len1 >= 0) {\n            count[s2.charAt(i - len1) - 'a']++;\n        }\n        if (allZero(count)) {\n            return true;\n        } \n    }\n    \n    return false;\n}\n\n  private boolean allZero(int[] count) {\n    for (int i = 0; i < 26; i++) {\n        if (count[i] != 0) {\n            return false;\n        } \n    }\n    return true;\n}\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"permutation-in-string","has_notes":false,"flag_type":1}