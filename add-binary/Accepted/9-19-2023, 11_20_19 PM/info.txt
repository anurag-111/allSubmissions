{"id":1053814695,"lang":"cpp","lang_name":"C++","time":"1 day, 18 hours","timestamp":1695145819,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1053814695/","is_pending":"Not Pending","title":"Add Binary","memory":"8.5 MB","code":"class Solution {\npublic:\n    string addBinary(string a, string b) {\n        string result = \"\";\n        int i = a.size() - 1;\n        int j = b.size() - 1;\n        int carry = 0;\n        \n        while(i >= 0 || j >= 0 || carry) {\n            int sum = carry;\n            if(i >= 0) {\n                sum += a[i--] - '0';\n            }\n            if(j >= 0) {\n                sum += b[j--] - '0';\n            }\n            carry = sum / 2;\n            result = to_string(sum % 2) + result;\n        }\n        return result;\n    }\n};\n\n\n/*\nTime Complexity: O(max(N, M))\n\nN and M are the lengths of the input binary strings 'a' and 'b'.\nThe code iterates through both input strings once, processing each digit.\nSpace Complexity: O(max(N, M))\n\nThe primary space usage comes from the 'res' string, which stores the binary sum.\nIn the worst case, the result string can have a length equal to the longer of the two input strings, so the space complexity is O(max(N, M)).\n*/","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"add-binary","has_notes":false,"flag_type":1}