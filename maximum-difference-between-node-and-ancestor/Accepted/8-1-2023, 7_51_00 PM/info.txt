{"id":1009436825,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1690899660,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/1009436825/","is_pending":"Not Pending","title":"Maximum Difference Between Node and Ancestor","memory":"9.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    // Function to find the maximum ancestor difference in a binary tree.\n    int maxAncestorDiff(TreeNode* root) {\n        int maxValue = INT_MIN;\n        // Call the DFS function to traverse the tree and find the maximum difference.\n        dfs(root, root->val, root->val, maxValue);\n        return maxValue; // Return the maximum difference found in the tree.\n    }\n\n    // Depth-First Search (DFS) function to traverse the binary tree and find the maximum difference.\n    void dfs(TreeNode* root, int minimum, int maximum, int& maxValue) {\n        if (root == nullptr) {\n            return; // Base case: If the current node is null, return.\n        }\n\n        // Calculate the absolute difference between the current node's value\n        // and the minimum and maximum values seen in the path from the root.\n        int currentMax = max(abs(root->val - minimum), abs(root->val - maximum));\n\n        // Update the global maximum difference seen so far.\n        maxValue = max(currentMax, maxValue);\n\n        // Recur on the left and right subtrees, updating the minimum and maximum values\n        // seen so far in the path from the root to the current node.\n        dfs(root->left, min(root->val, minimum), max(root->val, maximum), maxValue);\n        dfs(root->right, min(root->val, minimum), max(root->val, maximum), maxValue);\n    }\n};\n\n// Time complexity : O(n)\n// Space complexity : O(n)\n","compare_result":"1111111111111111111111111111","title_slug":"maximum-difference-between-node-and-ancestor","has_notes":false,"flag_type":1}