{"id":997447629,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1689673846,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/997447629/","is_pending":"Not Pending","title":"Implement Stack using Queues","memory":"6.8 MB","code":"class MyStack {\npublic:\n    \n    queue<int> q1;\n    queue<int> q2;\n    \n    MyStack() {\n        \n    }\n    \n    void push(int x) {\n        q2.push(x);\n        \n        while(!q1.empty()) {\n            q2.push(q1.front());\n            q1.pop();\n        }\n        \n        swap(q1, q2);\n    }\n    \n    int pop() {\n        if(!q1.empty()) {\n            int element = q1.front();\n            q1.pop();\n            return element;\n        } else {\n            return -1;\n        }\n    }\n    \n    int top() {\n        return q1.front();\n    }\n    \n    bool empty() {\n        if(q1.empty()) {\n            return true;\n        } else {\n            return false;\n        }\n    }\n};\n\n/**\n * Your MyStack object will be instantiated and called as such:\n * MyStack* obj = new MyStack();\n * obj->push(x);\n * int param_2 = obj->pop();\n * int param_3 = obj->top();\n * bool param_4 = obj->empty();\n */","compare_result":"11111111111111111","title_slug":"implement-stack-using-queues","has_notes":false,"flag_type":1}