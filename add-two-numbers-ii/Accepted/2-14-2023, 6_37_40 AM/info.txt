{"id":897536681,"lang":"java","lang_name":"Java","time":"7 months, 1 week","timestamp":1676336860,"status":10,"status_display":"Accepted","runtime":"2 ms","url":"/submissions/detail/897536681/","is_pending":"Not Pending","title":"Add Two Numbers II","memory":"42.2 MB","code":"/**\n * Definition for singly-linked list.\n * public class ListNode {\n *     int val;\n *     ListNode next;\n *     ListNode() {}\n *     ListNode(int val) { this.val = val; }\n *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }\n * }\n */\nclass Solution {\n    public ListNode addTwoNumbers(ListNode l1, ListNode l2) {\n        \n        if (l1 == null) {\n            return l2;\n        } else if (l2 == null) {\n            return l1;\n        }\n        \n        ListNode first = reverse(l1);\n        ListNode second = reverse(l2);\n        \n        return reverse(addLists(first, second));\n    }\n    \n    private ListNode addLists(ListNode first, ListNode second) {\n        \n        ListNode dummy = new ListNode(-1);\n        ListNode temp = dummy;\n        \n        \n        ListNode pFirst = first;\n        ListNode pSecond = second;\n        int carry = 0;\n        \n        while (pFirst != null || pSecond != null) {\n            \n            int a = pFirst != null ? pFirst.val : 0;\n            int b = pSecond != null ? pSecond.val : 0;\n            \n            int sum = a + b + carry;\n            \n            carry = sum / 10;\n            \n            sum = sum % 10;\n            \n            temp.next = new ListNode(sum);\n            temp = temp.next;\n            \n            pFirst = pFirst != null ? pFirst.next : null;\n            pSecond = pSecond != null ? pSecond.next : null;\n        }\n        \n        if (carry > 0) {\n            temp.next = new ListNode(carry);\n        }\n        \n        return dummy.next;\n    }\n    \n    private ListNode reverse(ListNode head) {\n        \n        if (head == null || head.next == null) {\n            return head;\n        }\n        \n        ListNode prev = null;\n        ListNode current = head;\n        ListNode next;\n        \n        while (current != null) {\n            next = current.next;\n            current.next = prev;\n            prev = current;\n            current = next;\n        }\n        \n        return prev;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"add-two-numbers-ii","has_notes":false,"flag_type":1}