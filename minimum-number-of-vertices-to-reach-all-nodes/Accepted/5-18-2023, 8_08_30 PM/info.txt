{"id":952767633,"lang":"cpp","lang_name":"C++","time":"4Â months","timestamp":1684420710,"status":10,"status_display":"Accepted","runtime":"304 ms","url":"/submissions/detail/952767633/","is_pending":"Not Pending","title":"Minimum Number of Vertices to Reach All Nodes","memory":"94.4 MB","code":"class Solution {\npublic:\n    vector<int> findSmallestSetOfVertices(int n, vector<vector<int>>& edges) {\n        vector<int> res, seen(n); // Vector to store the result and a vector to mark nodes as seen or unseen\n\n        // Mark the destination nodes of each edge as seen\n        for (auto& e: edges) {\n            seen[e[1]] = 1; // Mark the node as seen\n        }\n            \n        // Iterate through all nodes\n        for (int i = 0; i < n; ++i) {\n            if (seen[i] == 0) {\n                res.push_back(i); // Add the node to the result if it is unseen (not marked)\n            }\n        }\n\n        return res; // Return the result\n    }\n};\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-number-of-vertices-to-reach-all-nodes","has_notes":false,"flag_type":1}