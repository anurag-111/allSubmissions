{"id":892238941,"lang":"cpp","lang_name":"C++","time":"7 months, 2 weeks","timestamp":1675629019,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/892238941/","is_pending":"Not Pending","title":"Permutations II","memory":"8.4 MB","code":"class Solution {\npublic:\n    void permute(vector<vector<int>> &result, vector<int> &permutation, vector<int> &nums, vector<bool> &used) {\n      \n        if (permutation.size() == nums.size()) {\n            result.push_back(permutation);\n            return;\n        }\n\n        for (int i = 0; i < nums.size(); i++) {\n            if (used[i]) {\n                continue;\n            }\n                \n            if (i > 0 && nums[i] == nums[i - 1] && !used[i - 1]) {\n                continue;\n            }\n                \n            used[i] = true;\n            permutation.push_back(nums[i]);\n            permute(result, permutation, nums, used);\n            permutation.pop_back();\n            used[i] = false;\n        }\n    }\n\n    vector<vector<int>> permuteUnique(vector<int> &nums)\n    {\n        vector<vector<int>> result;\n        int n = nums.size();\n        vector<bool> used(n, false);\n        vector<int> permutation;\n\n        if (n == 0) {\n            return result;\n        }\n        \n        sort(nums.begin(), nums.end());\n        permute(result, permutation, nums, used);\n        return result;\n    }\n};\n\n\n// if (i > 0 && nums[i] == nums[i - 1] && !use[i - 1]) continue; \n\n// means, in other words, if previous identical number is used, then use the current number.\n\n// Working : https://ibb.co/Sw0fgk5\n\n\n//__________________________________________________________________________________________//\n\n\n// if (i > 0 && nums[i] == nums[i - 1] && use[i - 1]) continue; \n\n// which means if previous identical number is NOT used, use this number,\n// you are going to have to keep running the program until the next identical number \n// first populates the temp/list array before the previous identical number, and then \n// you backtrack into the first identical number which then populates the temp/list array.\n\n// Working : https://ibb.co/n0js4B6","compare_result":"111111111111111111111111111111111","title_slug":"permutations-ii","has_notes":false,"flag_type":1}