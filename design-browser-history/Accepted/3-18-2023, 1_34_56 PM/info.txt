{"id":917287006,"lang":"cpp","lang_name":"C++","time":"6 months, 1 week","timestamp":1679126696,"status":10,"status_display":"Accepted","runtime":"166 ms","url":"/submissions/detail/917287006/","is_pending":"Not Pending","title":"Design Browser History","memory":"60.6 MB","code":"class BrowserHistory {\npublic:\n\n    list<string> history;\n    list<string> :: iterator it;\n\n    BrowserHistory(string homepage) {\n        history.push_back(homepage);\n        it = history.begin();\n    }\n    \n    void visit(string url) {\n        auto del = it;\n        del++;\n        history.erase(del, history.end());\n        history.push_back(url);\n        it++;\n    }\n    \n    string back(int steps) {\n        while((it != history.begin() && steps--)) {\n            it--;\n        }\n        return *it;\n    }\n    \n    string forward(int steps) {\n        while((it != (--history.end()) && steps--)) {\n            it++;\n        }\n        return *it;\n    }\n};\n// Time Complexity: O(n)\n\n// Here n represents the number of nodes.\n\n// Space Complexity: O(1)\n\n// As only some pointers are being used.\n\n/**\n * Your BrowserHistory object will be instantiated and called as such:\n * BrowserHistory* obj = new BrowserHistory(homepage);\n * obj->visit(url);\n * string param_2 = obj->back(steps);\n * string param_3 = obj->forward(steps);\n */","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"design-browser-history","has_notes":false,"flag_type":1}