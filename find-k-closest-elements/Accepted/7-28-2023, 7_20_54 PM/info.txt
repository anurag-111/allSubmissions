{"id":1006174253,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1690552254,"status":10,"status_display":"Accepted","runtime":"45 ms","url":"/submissions/detail/1006174253/","is_pending":"Not Pending","title":"Find K Closest Elements","memory":"37.5 MB","code":"// Brute force approach :\n\nclass Solution {\npublic:\n    vector<int> findClosestElements(vector<int>& arr, int k, int x) {\n        vector<pair<int, int>> differences;\n        vector<int> result;\n        int size = arr.size();\n        \n        \n        for(int i = 0; i < size; i++) {\n            int difference = abs(arr[i] - x);\n            differences.push_back(make_pair(difference, arr[i]));\n        }\n                                  \n        sort(differences.begin(), differences.end());                         \n        \n        // for(auto pair : differences) {\n        //     cout << pair.first << \" \"<< pair.second << endl;\n        // }\n        \n        for(int i = 0; i < k; i++) {\n            result.push_back(differences[i].second);\n        }\n        \n        sort(result.begin(), result.end());\n        \n        return result;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-k-closest-elements","has_notes":false,"flag_type":1}