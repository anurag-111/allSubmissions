{"id":925133036,"lang":"cpp","lang_name":"C++","time":"5 months, 3 weeks","timestamp":1680228281,"status":10,"status_display":"Accepted","runtime":"152 ms","url":"/submissions/detail/925133036/","is_pending":"Not Pending","title":"Scramble String","memory":"32.8 MB","code":"//Memoization Approach\nclass Solution {\n    unordered_map<string, bool> mem;\n\n    bool solve(string s1,string s2) {\n        if(s1.size() == 1) {\n            return s1 == s2;\n        }\n            \n        if(s1 == s2) {\n            return true;\n        }\n            \n        string key = s1 + s2;\n\n        if(mem.find(key) != mem.end()) {\n            return mem[key];\n        }            \n        \n        int n = s1.size();\n        bool res = false;\n\n        for(int i = 1; i < n; ++i) {\n            if((solve(s1.substr(0, i), s2.substr(0, i)) && solve(s1.substr(i), s2.substr(i))) || \n                (solve(s1.substr(0, i), s2.substr(n - i)) && solve(s1.substr(i), s2.substr(0, n - i)))) {\n                    return mem[key] = true;\n            }\n                \n        }\n\n        return mem[key] = false;\n    }\n\npublic:\n    bool isScramble(string s1, string s2) {\n        int n = s1.size();\n        return solve(s1,s2);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"scramble-string","has_notes":false,"flag_type":1}