{"id":968266939,"lang":"java","lang_name":"Java","time":"3 months, 1 week","timestamp":1686419676,"status":10,"status_display":"Accepted","runtime":"1 ms","url":"/submissions/detail/968266939/","is_pending":"Not Pending","title":"Jump Game II","memory":"44.7 MB","code":"class Solution {\n    public int jump(int[] nums) {\n        int currentReach = 0; // Current maximum index reachable with the current number of jumps\n        int maxReach = 0; // Maximum index reachable overall\n        int jumps = 0; // Number of jumps taken\n\n        for (int i = 0; i < nums.length - 1; i++) { \n            // Update the maximum index reachable with the current number of jumps\n            currentReach = Math.max(currentReach, i + nums[i]); \n\n            if (i == maxReach) { // If we have reached the maximum index reachable so far\n                maxReach = currentReach; // Update the maximum index reachable overall\n                jumps++;\n            }\n        }\n\n        return jumps; // Return the minimum number of jumps required to reach the last index\n    }\n}\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"jump-game-ii","has_notes":false,"flag_type":1}