{"id":893866758,"lang":"cpp","lang_name":"C++","time":"7 months, 2 weeks","timestamp":1675839302,"status":10,"status_display":"Accepted","runtime":"17 ms","url":"/submissions/detail/893866758/","is_pending":"Not Pending","title":"Jump Game II","memory":"16.6 MB","code":"class Solution {\npublic:\n    int jump(vector<int>& nums) {\n        int reach=0;                                  // reach: maximum reachable index from current position\n        int count=0;                                  // count: number of jumps made so far\n        int last=0;                                   // last: rightmost index that has been reached so far\n        for(int i = 0; i < nums.size() - 1; i++) {    // loop through the array excluding the last element\n            reach = max(reach, i + nums[i]);          // update reach to the maximum between reach and i+nums[i]\n            if(i == last) {             \n                last = reach;                         // update last to the new maximum reachable index\n                count++;                              // increment the number of jumps made so far\n            }\n        }\n        return count;                                 // return the minimum number of jumps required\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"jump-game-ii","has_notes":false,"flag_type":1}