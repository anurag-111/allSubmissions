{"id":893861111,"lang":"cpp","lang_name":"C++","time":"7 months, 2 weeks","timestamp":1675838690,"status":10,"status_display":"Accepted","runtime":"36 ms","url":"/submissions/detail/893861111/","is_pending":"Not Pending","title":"Linked List in Binary Tree","memory":"32.2 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\nprivate:\n    bool Check(ListNode* head, TreeNode* root) {\n        if(head == NULL) {\n            return true;\n        }\n        if (root == NULL || root->val != head->val) {\n            return false;\n        }\n        // head->val = root->val\n        return Check(head->next, root->left) || Check(head->next, root->right);\n    }\n    bool SubPathCheck(ListNode* head, TreeNode* root) {\n        if(root == NULL) {\n            return false;\n        }\n        if(Check(head, root)) {\n            return true;\n        }\n        return SubPathCheck(head, root->left) || SubPathCheck(head, root->right);\n    }\n\npublic:\n    bool isSubPath(ListNode* head, TreeNode* root) {\n        return SubPathCheck(head, root);\n    }\n};\n\n\n\n\n\n\n\n","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111","title_slug":"linked-list-in-binary-tree","has_notes":false,"flag_type":1}