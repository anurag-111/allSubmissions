{"id":1006052182,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1690539504,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1006052182/","is_pending":"Not Pending","title":"Bag of Tokens","memory":"10.5 MB","code":"class Solution {\npublic:\n    int bagOfTokensScore(vector<int>& tokens, int power) {\n        // If tokens are empty, return 0\n        if (tokens.empty()) {\n            return 0;\n        }\n\n        // Initialize variables\n        int score = 0;                  // Current score\n        int left = 0;                   // Index of the leftmost token\n        int maxScore = 0;               // Maximum score achieved\n        int right = tokens.size() - 1;  // Index of the rightmost token\n\n        // Sort tokens for efficient operations\n        sort(tokens.begin(), tokens.end());\n\n        // Loop until left and right indices meet\n        while (left <= right) {\n            if (power >= tokens[left]) {\n                // Face up operation\n                power -= tokens[left];\n                score++;\n                maxScore = max(maxScore, score);\n                left++;\n            } else if (score > 0) {\n                // Face down operation\n                power += tokens[right];\n                score--;\n                right--;\n            } else {\n                // No more available moves, break the loop\n                break;\n            }\n        }\n\n        return maxScore;\n    }\n};\n\n// Time complexity : O(n log n)\n// Space compleity : O(1)\n","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"bag-of-tokens","has_notes":false,"flag_type":1}