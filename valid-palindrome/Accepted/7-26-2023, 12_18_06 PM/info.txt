{"id":1004218179,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1690354086,"status":10,"status_display":"Accepted","runtime":"6 ms","url":"/submissions/detail/1004218179/","is_pending":"Not Pending","title":"Valid Palindrome","memory":"7.7 MB","code":"class Solution {\npublic:\n    bool isPalindrome(string s) {\n        vector<char> cleanPhrase; \n        \n        // Extract alphanumeric characters and convert to lowercase\n        for (int i = 0; i < s.size(); i++) {\n            if (isalnum(s[i])) {\n                cleanPhrase.push_back(tolower(s[i])); \n            }\n        }\n        \n        int left = 0, right = cleanPhrase.size() - 1;\n        while (left < right) {\n            if (cleanPhrase[left] != cleanPhrase[right]) {\n                return false; // If characters don't match, it's not a palindrome\n            }\n            left++;\n            right--;\n        }\n        \n        return true; // If the loop finishes, the phrase is a palindrome\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"valid-palindrome","has_notes":false,"flag_type":1}