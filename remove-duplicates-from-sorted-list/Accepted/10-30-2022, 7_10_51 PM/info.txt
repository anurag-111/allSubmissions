{"id":833369485,"lang":"cpp","lang_name":"C++","time":"10 months, 3 weeks","timestamp":1667137251,"status":10,"status_display":"Accepted","runtime":"23 ms","url":"/submissions/detail/833369485/","is_pending":"Not Pending","title":"Remove Duplicates from Sorted List","memory":"11.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* deleteDuplicates(ListNode* head) {\n        \n        if (head == NULL || head->next == NULL) {\n            return head;\n        }\n        \n        ListNode *temp = head;\n        ListNode *nextPtr;\n        \n        while (temp->next != NULL) {\n            if (temp->val == temp->next->val){\n                nextPtr = temp->next->next;\n                delete (temp->next);\n                temp->next = nextPtr;\n            }\n            else {\n                temp = temp->next;\n            }\n        }\n        return head;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-duplicates-from-sorted-list","has_notes":false,"flag_type":1}