{"id":1015030503,"lang":"cpp","lang_name":"C++","time":"1 month, 2 weeks","timestamp":1691437404,"status":10,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/1015030503/","is_pending":"Not Pending","title":"Remove Duplicates from Sorted List","memory":"11.6 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\n\nclass Solution {\npublic:\n    ListNode* deleteDuplicates(ListNode* head) {\n        if(head == NULL || head->next == NULL) {\n            return head;\n        }\n\n        ListNode* current = head;\n        while(current != NULL && current->next != NULL) {\n            if(current->val == current->next->val) {\n                ListNode* temp = current->next;\n                current->next = current->next->next;\n                delete(temp);\n            } else {\n                current = current->next;\n            }\n        }\n        return head;\n    }\n};\n\n// TC : O(N)\n// SC : O(1)","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-duplicates-from-sorted-list","has_notes":false,"flag_type":1}