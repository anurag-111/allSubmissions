{"id":900485185,"lang":"java","lang_name":"Java","time":"7Â months","timestamp":1676741181,"status":10,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/900485185/","is_pending":"Not Pending","title":"Design Circular Queue","memory":"42.9 MB","code":"class MyCircularQueue {\n    \n    private int[] queue;\n    private int size;\n    private int front;\n    private int rear;\n\n    public MyCircularQueue(int k) {\n        this.size = k;\n        queue = new int[size];\n        rear = -1;\n        front = -1;\n    }\n    \n    public boolean enQueue(int value) {\n        \n        if (isFull()) {\n            return false;\n        }\n        \n        rear = (rear + 1) % size;\n        \n        if (front == -1) {\n            front = (front + 1) % size;\n        }\n\n        queue[rear] = value;\n        return true;\n    }\n    \n    public boolean deQueue() {\n        \n        if (isEmpty()) {\n            return false;\n        }\n        \n        if (front == rear) {\n            front = -1;\n            rear = -1;\n            return true;\n        }\n        \n        front = (front + 1) % size;\n        return true;\n    }\n    \n    public int Front() {\n        \n        if (isEmpty()) {\n            return -1;\n        }\n        \n        return queue[front];\n    }\n    \n    public int Rear() {\n        if (isEmpty()) {\n            return -1;\n        }\n        \n        return queue[rear];\n    }\n    \n    public boolean isEmpty() {\n        if (front == -1 && rear == -1) {\n            return true;\n        }\n        \n        return false;\n    }\n    \n    public boolean isFull() {\n        // return true if queue is full\n        if (((rear + 1) % size) == front) {\n            return true;\n        }\n        \n        return false;\n    }\n}\n\n/**\n * Your MyCircularQueue object will be instantiated and called as such:\n * MyCircularQueue obj = new MyCircularQueue(k);\n * boolean param_1 = obj.enQueue(value);\n * boolean param_2 = obj.deQueue();\n * int param_3 = obj.Front();\n * int param_4 = obj.Rear();\n * boolean param_5 = obj.isEmpty();\n * boolean param_6 = obj.isFull();\n */","compare_result":"1111111111111111111111111111111111111111111111111111111111","title_slug":"design-circular-queue","has_notes":false,"flag_type":1}