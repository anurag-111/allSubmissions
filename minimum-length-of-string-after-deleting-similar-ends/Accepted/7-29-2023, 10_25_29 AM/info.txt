{"id":1006618497,"lang":"cpp","lang_name":"C++","time":"1 month, 3 weeks","timestamp":1690606529,"status":10,"status_display":"Accepted","runtime":"22 ms","url":"/submissions/detail/1006618497/","is_pending":"Not Pending","title":"Minimum Length of String After Deleting Similar Ends","memory":"12.7 MB","code":"class Solution {\npublic:\n    int minimumLength(string s) {\n        int left = 0;                      // Pointer to the leftmost character.\n        int right = s.size() - 1;          // Pointer to the rightmost character.\n        \n        // Continue iterating until left pointer is less than right pointer\n        // and the characters at the corresponding positions are the same.\n        while (left < right && s[left] == s[right]) {\n            char commonChar = s[left];     // Store the character at the current left pointer position\n            \n            // Move left pointer towards the right while adjacent characters are the same.\n            while (left <= right && s[left] == commonChar) {\n                left++;\n            }\n            \n            // Move right pointer towards the left while adjacent characters are the same.\n            while (right >= left && s[right] == commonChar) {\n                right--;\n            }\n        }\n        \n        // The minimum length of the remaining substring is the difference between\n        // right and left pointers plus 1 (to include the characters at both pointers).\n        return (right - left + 1);\n    }\n};\n\n// TC : O(N)\n// SC : O(1)","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-length-of-string-after-deleting-similar-ends","has_notes":false,"flag_type":1}