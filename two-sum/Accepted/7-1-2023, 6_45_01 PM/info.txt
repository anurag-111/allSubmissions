{"id":983753480,"lang":"cpp","lang_name":"C++","time":"2 months, 3 weeks","timestamp":1688217301,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/983753480/","is_pending":"Not Pending","title":"Two Sum","memory":"10.8 MB","code":"#include <unordered_map>\n#include <vector>\n\nclass Solution {\npublic:\n    // Function to find two numbers in the given vector that add up to the target value\n    vector<int> twoSum(vector<int>& nums, int target) {\n        unordered_map<int, int> numMap; // Map to store numbers and their indices\n        vector<int> result; // Vector to store the result indices\n\n        for(int i = 0; i < nums.size(); i++) {\n            int complement = target - nums[i]; // Calculate the complement value\n\n            // Check if the complement value exists in the map\n            if(numMap.find(complement) != numMap.end()) { \n                result.push_back(numMap[complement]); // Add the index of the complement value to the result vector\n                result.push_back(i); // Add the current index to the result vector\n                break; // Exit the loop since we have found the result\n            }\n\n            numMap[nums[i]] = i; // Store the current number and its index in the map\n        }\n\n        return result; // Return the result vector\n    }\n};\n","compare_result":"111111111111111111111111111111111111111111111111111111111","title_slug":"two-sum","has_notes":false,"flag_type":1}