{"id":978375669,"lang":"cpp","lang_name":"C++","time":"2 months, 4 weeks","timestamp":1687593594,"status":10,"status_display":"Accepted","runtime":"18 ms","url":"/submissions/detail/978375669/","is_pending":"Not Pending","title":"Tallest Billboard","memory":"7.8 MB","code":"class Solution {\npublic:\n    int tallestBillboard(vector<int>& rods) {\n        int sum = 0;\n        for (int rod : rods) {\n            sum += rod;\n        }\n\n        int dp[sum + 1];\n        dp[0] = 0;\n\n        // Initialize all other elements in dp[] to -1\n        for (int i = 1; i <= sum; i++) {\n            dp[i] = -1;\n        }\n\n        for (int rod : rods) {\n            int dpCopy[sum + 1];\n            // Copy the current state of dp[] to dpCopy[]\n            copy(dp, dp + (sum + 1), dpCopy);\n\n            for (int i = 0; i <= sum - rod; i++) {\n                if (dpCopy[i] < 0) continue;\n\n                // Case 1: Place the current rod on the same height billboard\n                dp[i + rod] = max(dp[i + rod], dpCopy[i]);\n\n                // Case 2: Place the current rod on the taller billboard\n                // Calculate the absolute difference between current height and rod length\n                dp[abs(i - rod)] = max(dp[abs(i - rod)], dpCopy[i] + min(i, rod));\n            }\n        }\n\n        // Return the maximum height of the billboard stored at dp[0]\n        return dp[0];\n    }\n};\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"tallest-billboard","has_notes":false,"flag_type":1}