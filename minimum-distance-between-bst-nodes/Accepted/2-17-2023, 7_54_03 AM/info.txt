{"id":899479375,"lang":"cpp","lang_name":"C++","time":"7Â months","timestamp":1676600643,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/899479375/","is_pending":"Not Pending","title":"Minimum Distance Between BST Nodes","memory":"9.9 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    int minDistance = INT_MAX;\n    // Initially, it will be null.\n    TreeNode* prevValue;\n        \n    void inorderTraversal(TreeNode* root) {\n        if (root == NULL) {\n            return;\n        }\n        \n        inorderTraversal(root->left);\n\n        // Find the difference with the previous value if it is there.\n        if (prevValue != NULL) {\n            minDistance = min(minDistance, root->val - prevValue->val);\n        }\n        prevValue = root;\n        \n        inorderTraversal(root->right);\n    }\n    \n    int minDiffInBST(TreeNode* root) {\n        inorderTraversal(root);\n        return minDistance;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111","title_slug":"minimum-distance-between-bst-nodes","has_notes":false,"flag_type":1}