{"id":1045677719,"lang":"cpp","lang_name":"C++","time":"1 week, 3 days","timestamp":1694353166,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/1045677719/","is_pending":"Not Pending","title":"Minimum Distance Between BST Nodes","memory":"9.8 MB","code":"class Solution {\n    private:\n        void traverse(TreeNode *root, vector<int> &inorderTrav) {\n            if(root == NULL) {\n                return;\n            }\n\n            traverse(root -> left, inorderTrav);\n            inorderTrav.push_back(root -> val);\n            traverse(root -> right, inorderTrav);\n        }\n    public:\n        int minDiffInBST(TreeNode* root) {\n            // Empty Tree\n            if(root == NULL) {\n                return 0;\n            }\n\n            vector<int> inorderTrav;\n            traverse(root, inorderTrav);\n\n            for(int num : inorderTrav) {\n                cout << num << \" \";\n            }\n\n            int minDiff = INT_MAX;\n            for(int i = 0; i < inorderTrav.size() - 1; i++) {\n                minDiff = min(abs(inorderTrav[i] - inorderTrav[i + 1]), minDiff);\n            }\n\n            return minDiff;\n        }\n};\n\n// TIME COMPLEXITY : O(N)\n// SPACE COMPLEXITY : O(N)","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"minimum-distance-between-bst-nodes","has_notes":false,"flag_type":1}