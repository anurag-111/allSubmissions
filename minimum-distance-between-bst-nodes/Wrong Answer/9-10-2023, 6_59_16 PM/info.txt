{"id":1045670470,"lang":"cpp","lang_name":"C++","time":"1 week, 3 days","timestamp":1694352556,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1045670470/","is_pending":"Not Pending","title":"Minimum Distance Between BST Nodes","memory":"N/A","code":"class Solution {\n    private:\n        void traverse(TreeNode *root, vector<int> &inorderTrav) {\n            if(root == NULL) {\n                return;\n            }\n\n            traverse(root -> left, inorderTrav);\n            inorderTrav.push_back(root -> val);\n            traverse(root -> right, inorderTrav);\n        }\n    public:\n        int minDiffInBST(TreeNode* root) {\n            // Empty Tree\n            if(root == NULL) {\n                return 0;\n            }\n\n            vector<int> inorderTrav;\n            traverse(root, inorderTrav);\n\n            // for(int num : inorderTrav) {\n            //     cout << num << \" \";\n            // }\n\n            return inorderTrav[1] - inorderTrav[0];\n        }\n};\n\n// TIME COMPLEXITY : O(N)\n// SPACE COMPLEXITY : O(N)","compare_result":"1101001000010000000000000010001000000000000001101","title_slug":"minimum-distance-between-bst-nodes","has_notes":false,"flag_type":1}