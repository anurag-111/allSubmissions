{"id":1045656826,"lang":"cpp","lang_name":"C++","time":"1 week, 3 days","timestamp":1694351354,"status":11,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/1045656826/","is_pending":"Not Pending","title":"Minimum Distance Between BST Nodes","memory":"N/A","code":"// val, left, right\nclass Solution {\n    private:\n        int calculateDiff(TreeNode *root, int &currDiff, int &maxDiff) {\n            if(root == NULL) {\n                return 0;\n            }\n\n            int leftVal = calculateDiff(root -> left, currDiff, maxDiff);\n            int rightVal = calculateDiff(root -> right, currDiff, maxDiff);\n\n            if(root -> left != NULL && root -> right != NULL) {\n                int minVal = min(root -> val - leftVal, root -> val - rightVal);\n                currDiff = min(minVal, abs(leftVal - rightVal));\n                maxDiff = min(maxDiff, currDiff);\n            }\n\n            return root -> val;\n        }\n    public:\n        int minDiffInBST(TreeNode* root) {\n            // Empty tree\n            if(root == NULL) { \n                return 0;\n            }\n\n            int currDiff = 0;\n            int minDiff = INT_MAX;\n\n            // Helper Function \n            calculateDiff(root, currDiff, minDiff);\n\n            // Return the result\n            return minDiff;\n        }\n};","compare_result":"0000000000000000000000000000000000000000000000000","title_slug":"minimum-distance-between-bst-nodes","has_notes":false,"flag_type":1}