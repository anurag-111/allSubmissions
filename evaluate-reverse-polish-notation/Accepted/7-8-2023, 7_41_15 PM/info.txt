{"id":989335201,"lang":"cpp","lang_name":"C++","time":"2 months, 2 weeks","timestamp":1688825475,"status":10,"status_display":"Accepted","runtime":"17 ms","url":"/submissions/detail/989335201/","is_pending":"Not Pending","title":"Evaluate Reverse Polish Notation","memory":"12 MB","code":"class Solution {\nprivate:\n    // Function to perform arithmetic operations\n    int performOperation(char op, int operand1, int operand2) {\n        switch (op) {\n            case '+':\n                return operand1 + operand2;\n            case '-':\n                return operand1 - operand2;\n            case '*':\n                return operand1 * operand2;\n            case '/':\n                return operand1 / operand2;\n            default:\n                return 0;\n        }\n    }\n\npublic:\n    // Function to evaluate Reverse Polish Notation expression\n    int evalRPN(vector<string>& tokens) {\n        stack<int> evalStack;\n\n        for (int i = 0; i < tokens.size(); i++) {\n            // If the token is an operator\n            if (tokens[i] == \"+\" || tokens[i] == \"-\" || tokens[i] == \"*\" || tokens[i] == \"/\") {\n                int operand2 = evalStack.top();\n                evalStack.pop();\n                int operand1 = evalStack.top();\n                evalStack.pop();\n\n                // Perform the operation and push the result back to the stack\n                int result = performOperation(tokens[i][0], operand1, operand2);\n                evalStack.push(result);\n            } else {\n                // If the token is a number, convert it to integer and push to the stack\n                int num = stoi(tokens[i]);\n                evalStack.push(num);\n            }\n        }\n\n        // The final result is at the top of the stack\n        return evalStack.top();\n    }\n};\n","compare_result":"111111111111111111111","title_slug":"evaluate-reverse-polish-notation","has_notes":false,"flag_type":1}