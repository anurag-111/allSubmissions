{"id":942141008,"lang":"cpp","lang_name":"C++","time":"4 months, 3 weeks","timestamp":1682865326,"status":10,"status_display":"Accepted","runtime":"754 ms","url":"/submissions/detail/942141008/","is_pending":"Not Pending","title":"Remove Max Number of Edges to Keep Graph Fully Traversable","memory":"155.1 MB","code":"class DSU {\npublic:\n    vector<int> parent, rank;\n    DSU(int n){\n        parent.resize(n, 0);\n        rank.resize(n, 0);\n        \n        for(int i=0;i<n;i++) parent[i] = i;\n    }\n    \n    int Find(int x){\n        return parent[x] = parent[x] == x ? x : Find(parent[x]);\n    }\n    \n    bool Union(int x, int y){\n        int xset = Find(x), yset = Find(y);\n        if(xset != yset){\n            rank[xset] < rank[yset] ? parent[xset] = yset : parent[yset] = xset;\n            rank[xset] += rank[xset] == rank[yset];\n            return true;\n        }\n        return false;\n    }\n};\n\nclass Solution {\npublic:\n    int maxNumEdgesToRemove(int n, vector<vector<int>>& edges) {\n        sort(edges.begin(), edges.end(), [&](auto const &a, auto const &b){\n            return a[0] > b[0];\n        });\n\n        DSU dsu_alice(n+1);\n        DSU dsu_bob(n+1);\n\n        int removed_edge = 0, alice_edges=0, bob_edges=0;\n        for(auto edge : edges){\n            if(edge[0] == 3){\n                if(dsu_alice.Union(edge[1], edge[2])){ // Both Alice & Bob\n                    dsu_bob.Union(edge[1], edge[2]);\n                    alice_edges++;\n                    bob_edges++;\n                }else{\n                    removed_edge++;\n                }\n            }else if(edge[0] == 2){ //Only Bob\n                if(dsu_bob.Union(edge[1], edge[2])){\n                    bob_edges++;\n                }else{\n                    removed_edge++;\n                }\n            }else{ // Only Alice\n                if(dsu_alice.Union(edge[1], edge[2])){\n                    alice_edges++;\n                }else{\n                    removed_edge++;\n                }\n            }\n        }\n\n        return (bob_edges == n - 1 && alice_edges == n - 1) ? removed_edge : -1;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-max-number-of-edges-to-keep-graph-fully-traversable","has_notes":false,"flag_type":1}