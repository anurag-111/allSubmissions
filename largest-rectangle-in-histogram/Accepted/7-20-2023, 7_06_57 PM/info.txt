{"id":999362706,"lang":"cpp","lang_name":"C++","time":"2Â months","timestamp":1689860217,"status":10,"status_display":"Accepted","runtime":"167 ms","url":"/submissions/detail/999362706/","is_pending":"Not Pending","title":"Largest Rectangle in Histogram","memory":"75.3 MB","code":"class Solution {\npublic:\n    int largestRectangleArea(vector<int>& heights) {\n        int n = heights.size();\n        stack<int> st; // Stack to keep track of indices of bars\n        int maxArea = 0; // Variable to store the maximum area\n\n        for (int i = 0; i <= n; i++) {\n            // Push an extra -1 at the end of the heights array to ensure all elements in the stack are processed.\n            // If the current index 'i' is equal to 'n', set the current height to 0, \n            // as it acts as the right boundary for any remaining bars in the stack.\n            int currHeight = (i == n) ? 0 : heights[i];\n\n            // While the stack is not empty and the height of the current bar (heights[i]) \n            // is less than or equal to the height of the bar at the top of the stack (heights[st.top()]), \n            // keep popping elements from the stack.\n            while (!st.empty() && heights[st.top()] >= currHeight) {\n                // Get the height of the bar at the top of the stack and remove it from the stack.\n                int height = heights[st.top()];\n                st.pop();\n\n                // Calculate the width of the rectangle using the left and right boundaries.\n                int width = st.empty() ? i : (i - st.top() - 1);\n\n                // Calculate the area of the rectangle formed by the current bar.\n                int area = height * width;\n\n                // Update the maximum area if needed.\n                maxArea = max(maxArea, area);\n            }\n\n            // Push the current index 'i' onto the stack to keep track of the bar's index for the next iterations.\n            st.push(i);\n        }\n\n        // Return the maximum area found.\n        return maxArea;\n    }\n};\n","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"largest-rectangle-in-histogram","has_notes":false,"flag_type":1}