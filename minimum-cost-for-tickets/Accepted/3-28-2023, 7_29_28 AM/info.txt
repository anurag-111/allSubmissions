{"id":923351105,"lang":"cpp","lang_name":"C++","time":"5 months, 3 weeks","timestamp":1679968768,"status":10,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/923351105/","is_pending":"Not Pending","title":"Minimum Cost For Tickets","memory":"9.6 MB","code":"class Solution {\npublic:\n    int mincostTickets(vector<int>& days, vector<int>& costs) {\n        unordered_map<int, int> tickets;\n        tickets[1] = costs[0];\n        tickets[7] = costs[1];\n        tickets[30] = costs[2];\n        \n        vector<int> dp(366, INT_MAX);\n        dp[0] = 0;\n        for(int i = 1; i < 366; ++i){\n            if(find(days.begin(), days.end(), i) == days.end()){\n                dp[i] = dp[i - 1];\n                continue;\n            }\n            for(auto ticket : tickets){\n                dp[i] = min(dp[i], dp[max(0, i - ticket.first)] + ticket.second);\n            }\n        }\n        \n        return dp[365];\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-cost-for-tickets","has_notes":false,"flag_type":1}