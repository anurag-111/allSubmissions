{"id":923567661,"lang":"java","lang_name":"Java","time":"5 months, 3 weeks","timestamp":1680001578,"status":10,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/923567661/","is_pending":"Not Pending","title":"Minimum Cost For Tickets","memory":"40.5 MB","code":"class Solution {\n    private static int rec(int[] days, int[] costs, int i, int[] dp) {\n        if(i >= days.length) {\n            return 0;\n        }\n\n        if(dp[i] > 0) {\n            return dp[i];\n        }\n\n        int op1 = costs[0] + rec(days, costs, i + 1, dp);\n\n        int k = i;\n        for(; k < days.length; k++) {\n            if(days[k] >= days[i] + 7) {\n                break;\n            }\n        }\n        \n        int op2 = costs[1] + rec(days, costs, k, dp);\n\n        for(; k <days.length; k++){\n            if(days[k] >= days[i] + 30){\n                break;\n            }\n        }\n\n        int op3 = costs[2] + rec(days, costs, k, dp);\n        \n        dp[i] = Math.min(op1, Math.min(op2, op3)); \n\n        return Math.min(op1, Math.min(op2, op3));\n    }\n    \n     public int mincostTickets(int[] days, int[] costs) {\n        int dp[] = new int[days.length];\n        int ans = rec(days, costs, 0, dp);\n        return ans;\n    }\n}","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"minimum-cost-for-tickets","has_notes":false,"flag_type":1}